// Generated by CIRCT firtool-1.62.0
module AlignmentNetwork(
  input  [31:0] io_data_in,
  input  [31:0] io_dmem_addr,
  input  [2:0]  io_control,
  output [31:0] io_data_out
);

  wire [2:0]  _rw_address_type_T_18 =
    io_dmem_addr > 32'h9FFFFFFF & io_dmem_addr[31:30] != 2'h3 ? 3'h5 : 3'h6;
  wire [2:0]  _rw_address_type_T_19 =
    io_dmem_addr[31] & io_dmem_addr < 32'hA0000000 ? 3'h4 : _rw_address_type_T_18;
  wire [2:0]  _rw_address_type_T_20 =
    io_dmem_addr > 32'h10000FFF & io_dmem_addr < 32'h10002000
      ? 3'h3
      : _rw_address_type_T_19;
  wire [2:0]  _rw_address_type_T_21 =
    io_dmem_addr > 32'h2FFFFFFF & io_dmem_addr < 32'h40000000
      ? 3'h2
      : _rw_address_type_T_20;
  wire [2:0]  _rw_address_type_T_22 =
    io_dmem_addr > 32'hEFFFFFF & io_dmem_addr < 32'h10000000
      ? 3'h1
      : _rw_address_type_T_21;
  wire [2:0]  rw_address_type =
    (|(io_dmem_addr[31:28])) & io_dmem_addr < 32'h10001000 ? 3'h0 : _rw_address_type_T_22;
  reg  [31:0] casez_tmp;
  wire [31:0] shifted_data = io_data_in >> {27'h0, io_dmem_addr[1:0], 3'h0};
  always @(*) begin
    casez (io_control)
      3'b000:
        casez_tmp = {{24{shifted_data[7]}}, shifted_data[7:0]};
      3'b001:
        casez_tmp = {{16{shifted_data[15]}}, shifted_data[15:0]};
      3'b010:
        casez_tmp = io_data_in;
      3'b011:
        casez_tmp = 32'h0;
      3'b100:
        casez_tmp = {24'h0, shifted_data[7:0]};
      3'b101:
        casez_tmp = {16'h0, shifted_data[15:0]};
      3'b110:
        casez_tmp = 32'h0;
      default:
        casez_tmp = 32'h0;
    endcase
  end // always @(*)
  assign io_data_out =
    rw_address_type == 3'h5 | rw_address_type == 3'h4 | rw_address_type == 3'h3
    | rw_address_type == 3'h1 | (|rw_address_type)
      ? casez_tmp
      : io_data_in;
endmodule

