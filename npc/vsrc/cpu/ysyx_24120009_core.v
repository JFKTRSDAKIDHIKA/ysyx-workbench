
// Generated by CIRCT firtool-1.62.0
// Standard header to adapt well known macros for register randomization.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

// Include register initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_REG_
    `define ENABLE_INITIAL_REG_
  `endif // not def ENABLE_INITIAL_REG_
`endif // not def SYNTHESIS

// Include rmemory initializers in init blocks unless synthesis is set
`ifndef SYNTHESIS
  `ifndef ENABLE_INITIAL_MEM_
    `define ENABLE_INITIAL_MEM_
  `endif // not def ENABLE_INITIAL_MEM_
`endif // not def SYNTHESIS

// external module EBreakHandler

module IFU(	// src/main/scala/npc/ifu.scala:9:7
  input         clock,	// src/main/scala/npc/ifu.scala:9:7
                reset,	// src/main/scala/npc/ifu.scala:9:7
                io_out_ready,	// src/main/scala/npc/ifu.scala:10:14
  output        io_out_valid,	// src/main/scala/npc/ifu.scala:10:14
  output [31:0] io_out_bits_inst,	// src/main/scala/npc/ifu.scala:10:14
                io_out_bits_pc,	// src/main/scala/npc/ifu.scala:10:14
  input  [2:0]  io_pc_sel,	// src/main/scala/npc/ifu.scala:10:14
  input  [31:0] io_jump_reg_target,	// src/main/scala/npc/ifu.scala:10:14
                io_br_target,	// src/main/scala/npc/ifu.scala:10:14
                io_jmp_target,	// src/main/scala/npc/ifu.scala:10:14
  input         io_pc_wen,	// src/main/scala/npc/ifu.scala:10:14
  output        io_memory_ar_valid,	// src/main/scala/npc/ifu.scala:10:14
  input         io_memory_ar_ready,	// src/main/scala/npc/ifu.scala:10:14
  output [31:0] io_memory_ar_addr,	// src/main/scala/npc/ifu.scala:10:14
  input         io_memory_r_valid,	// src/main/scala/npc/ifu.scala:10:14
  output        io_memory_r_ready,	// src/main/scala/npc/ifu.scala:10:14
  input  [31:0] io_memory_r_data,	// src/main/scala/npc/ifu.scala:10:14
  output [31:0] io_pc_debug,	// src/main/scala/npc/ifu.scala:10:14
                io_inst_debug,	// src/main/scala/npc/ifu.scala:10:14
  output [1:0]  io_ifu_state_debug	// src/main/scala/npc/ifu.scala:10:14
);

  reg  [31:0] pc;	// src/main/scala/npc/ifu.scala:42:19
  reg  [31:0] if_inst_buffer;	// src/main/scala/npc/ifu.scala:43:31
  reg  [1:0]  state;	// src/main/scala/npc/ifu.scala:71:22
  wire        _GEN = state == 2'h0;	// src/main/scala/npc/ifu.scala:9:7, :71:22, :74:17
  wire        _GEN_0 = state == 2'h1;	// src/main/scala/npc/ifu.scala:9:7, :71:22, :74:17
  wire        _GEN_1 = state == 2'h2;	// src/main/scala/npc/ifu.scala:9:7, :71:22, :74:17
  wire        _GEN_2 = _GEN | _GEN_0;	// src/main/scala/npc/ifu.scala:43:31, :74:17
  wire        _GEN_3 = _GEN | _GEN_0 | _GEN_1 | (&state);	// src/main/scala/npc/ifu.scala:39:20, :71:22, :74:17, :77:24, :88:24, :99:24, :111:24
  wire [31:0] io_inst_debug_0 = _GEN_3 ? if_inst_buffer : 32'h0;	// src/main/scala/npc/ifu.scala:39:20, :43:31, :74:17, :77:24, :88:24, :99:24, :111:24
  always @(posedge clock) begin	// src/main/scala/npc/ifu.scala:9:7
    if (reset) begin	// src/main/scala/npc/ifu.scala:9:7
      pc <= 32'h80000000;	// src/main/scala/npc/ifu.scala:42:19
      if_inst_buffer <= 32'h0;	// src/main/scala/npc/ifu.scala:43:31
      state <= 2'h1;	// src/main/scala/npc/ifu.scala:9:7, :71:22
    end
    else begin	// src/main/scala/npc/ifu.scala:9:7
      automatic logic [3:0][1:0] _GEN_4;	// src/main/scala/npc/ifu.scala:74:17, :81:23, :92:32, :103:31
      if (io_pc_wen) begin	// src/main/scala/npc/ifu.scala:10:14
        if (io_pc_sel == 3'h4)	// src/main/scala/npc/ifu.scala:45:21, :49:44
          pc <= 32'h0;	// src/main/scala/npc/ifu.scala:42:19, :43:31
        else if (io_pc_sel == 3'h3)	// src/main/scala/npc/ifu.scala:49:44
          pc <= io_jmp_target;	// src/main/scala/npc/ifu.scala:42:19
        else if (io_pc_sel == 3'h2)	// src/main/scala/npc/ifu.scala:49:44
          pc <= io_br_target;	// src/main/scala/npc/ifu.scala:42:19
        else if (io_pc_sel == 3'h1)	// src/main/scala/npc/ifu.scala:49:44
          pc <= io_jump_reg_target;	// src/main/scala/npc/ifu.scala:42:19
        else	// src/main/scala/npc/ifu.scala:49:44
          pc <= pc + 32'h4;	// src/main/scala/npc/ifu.scala:42:19, :45:21
      end
      if (_GEN_2 | ~(_GEN_1 & io_memory_r_valid)) begin	// src/main/scala/npc/ifu.scala:43:31, :74:17, :103:31, :104:24
      end
      else	// src/main/scala/npc/ifu.scala:43:31, :74:17
        if_inst_buffer <= io_memory_r_data;	// src/main/scala/npc/ifu.scala:43:31
      _GEN_4 =
        {{(&state) & io_out_ready ? 2'h0 : state},
         {io_memory_r_valid ? 2'h3 : state},
         {io_memory_ar_ready ? 2'h2 : state},
         {io_pc_wen ? 2'h1 : state}};	// src/main/scala/npc/ifu.scala:9:7, :71:22, :74:17, :81:23, :82:15, :92:32, :93:15, :103:31, :105:15, :115:26, :116:15
      state <= _GEN_4[state];	// src/main/scala/npc/ifu.scala:71:22, :74:17, :81:23, :92:32, :103:31
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/npc/ifu.scala:9:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/npc/ifu.scala:9:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/npc/ifu.scala:9:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/npc/ifu.scala:9:7
      automatic logic [31:0] _RANDOM[0:2];	// src/main/scala/npc/ifu.scala:9:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/npc/ifu.scala:9:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/npc/ifu.scala:9:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/npc/ifu.scala:9:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/npc/ifu.scala:9:7
        end	// src/main/scala/npc/ifu.scala:9:7
        pc = _RANDOM[2'h0];	// src/main/scala/npc/ifu.scala:9:7, :42:19
        if_inst_buffer = _RANDOM[2'h1];	// src/main/scala/npc/ifu.scala:9:7, :43:31
        state = _RANDOM[2'h2][1:0];	// src/main/scala/npc/ifu.scala:9:7, :71:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/npc/ifu.scala:9:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/npc/ifu.scala:9:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  EBreakHandler ebreakHandler (	// src/main/scala/npc/ifu.scala:61:29
    .inst (io_inst_debug_0)	// src/main/scala/npc/ifu.scala:39:20, :74:17, :77:24, :88:24, :99:24, :111:24
  );
  assign io_out_valid = ~(_GEN | _GEN_0 | _GEN_1) & (&state);	// src/main/scala/npc/ifu.scala:9:7, :71:22, :74:17, :76:20, :87:20, :98:20
  assign io_out_bits_inst = io_inst_debug_0;	// src/main/scala/npc/ifu.scala:9:7, :39:20, :74:17, :77:24, :88:24, :99:24, :111:24
  assign io_out_bits_pc = pc;	// src/main/scala/npc/ifu.scala:9:7, :42:19
  assign io_memory_ar_valid = ~_GEN & _GEN_0;	// src/main/scala/npc/ifu.scala:9:7, :74:17, :79:26
  assign io_memory_ar_addr = _GEN_3 ? pc : 32'h0;	// src/main/scala/common/axi4_lite.scala:57:17, src/main/scala/npc/ifu.scala:9:7, :39:20, :42:19, :43:31, :74:17, :77:24, :78:25, :88:24, :89:25, :99:24, :100:25, :111:24, :112:25
  assign io_memory_r_ready = ~_GEN_2 & _GEN_1;	// src/main/scala/npc/ifu.scala:9:7, :43:31, :74:17, :80:25, :91:25
  assign io_pc_debug = pc;	// src/main/scala/npc/ifu.scala:9:7, :42:19
  assign io_inst_debug = io_inst_debug_0;	// src/main/scala/npc/ifu.scala:9:7, :39:20, :74:17, :77:24, :88:24, :99:24, :111:24
  assign io_ifu_state_debug = state;	// src/main/scala/npc/ifu.scala:9:7, :71:22
endmodule

module IDU(	// src/main/scala/npc/idu.scala:35:7
  input         clock,	// src/main/scala/npc/idu.scala:35:7
                reset,	// src/main/scala/npc/idu.scala:35:7
  output        io_in_ready,	// src/main/scala/npc/idu.scala:36:16
  input         io_in_valid,	// src/main/scala/npc/idu.scala:36:16
  input  [31:0] io_in_bits_inst,	// src/main/scala/npc/idu.scala:36:16
                io_in_bits_pc,	// src/main/scala/npc/idu.scala:36:16
  input         io_out_ready,	// src/main/scala/npc/idu.scala:36:16
  output        io_out_valid,	// src/main/scala/npc/idu.scala:36:16
  output [31:0] io_out_bits_inst,	// src/main/scala/npc/idu.scala:36:16
                io_out_bits_pc,	// src/main/scala/npc/idu.scala:36:16
  output [4:0]  io_out_bits_wb_addr,	// src/main/scala/npc/idu.scala:36:16
  output [31:0] io_out_bits_alu_op1,	// src/main/scala/npc/idu.scala:36:16
                io_out_bits_alu_op2,	// src/main/scala/npc/idu.scala:36:16
                io_out_bits_rs2_data,	// src/main/scala/npc/idu.scala:36:16
                io_jump_reg_target,	// src/main/scala/npc/idu.scala:36:16
                io_br_target,	// src/main/scala/npc/idu.scala:36:16
                io_jmp_target,	// src/main/scala/npc/idu.scala:36:16
  output [2:0]  io_pc_sel,	// src/main/scala/npc/idu.scala:36:16
  input  [31:0] io_rs1_data,	// src/main/scala/npc/idu.scala:36:16
                io_rs2_data,	// src/main/scala/npc/idu.scala:36:16
  output [4:0]  io_rs1_addr,	// src/main/scala/npc/idu.scala:36:16
                io_rs2_addr	// src/main/scala/npc/idu.scala:36:16
);

  reg  [31:0]      idu_reg_inst;	// src/main/scala/npc/idu.scala:39:33
  reg  [31:0]      idu_reg_pc;	// src/main/scala/npc/idu.scala:40:31
  reg  [1:0]       state;	// src/main/scala/npc/idu.scala:48:24
  wire             _GEN = state == 2'h0;	// src/main/scala/npc/idu.scala:35:7, :48:24, :51:19
  wire             _GEN_0 = state == 2'h1;	// src/main/scala/npc/idu.scala:35:7, :48:24, :51:19
  wire             _GEN_1 = state == 2'h2;	// src/main/scala/npc/idu.scala:35:7, :48:24, :51:19
  wire             io_in_ready_0 = _GEN & io_in_valid;	// src/main/scala/npc/idu.scala:51:19, :54:27
  wire [19:0]      _imm_i_sext_T_1 = {20{idu_reg_inst[31]}};	// src/main/scala/npc/idu.scala:39:33, :81:29, :88:{30,39}
  wire             br_eq = io_rs1_data == io_rs2_data;	// src/main/scala/npc/idu.scala:100:29
  wire             br_lt = $signed(io_rs1_data) < $signed(io_rs2_data);	// src/main/scala/npc/idu.scala:101:36
  wire             br_ltu = io_rs1_data < io_rs2_data;	// src/main/scala/npc/idu.scala:102:37
  wire             _branch_taken_T_4 = idu_reg_inst[14:12] == 3'h0 & br_eq;	// src/main/scala/npc/idu.scala:39:33, :100:29, :106:30, :109:50
  wire [7:0]       _GEN_2 =
    {{~br_ltu},
     {br_ltu},
     {~br_lt},
     {br_lt},
     {_branch_taken_T_4},
     {_branch_taken_T_4},
     {~br_eq},
     {_branch_taken_T_4}};	// src/main/scala/npc/idu.scala:100:29, :101:36, :102:37, :109:50, :111:16, :113:16, :115:16
  wire             _alu_op2Sel_T_4 = idu_reg_inst[6:0] == 7'h67;	// src/main/scala/npc/idu.scala:39:33, :105:30, :119:40
  wire             _alu_op2Sel_T_6 = idu_reg_inst[6:0] == 7'h6F;	// src/main/scala/npc/idu.scala:39:33, :105:30, :119:40
  wire             _alu_op2Sel_T_8 = idu_reg_inst[6:0] == 7'h63;	// src/main/scala/npc/idu.scala:39:33, :105:30, :119:40
  wire             _alu_op2Sel_T_11 = idu_reg_inst[6:0] == 7'h3;	// src/main/scala/npc/idu.scala:39:33, :105:30, :129:41
  wire             _alu_op2Sel_T_12 = idu_reg_inst[6:0] == 7'h23;	// src/main/scala/npc/idu.scala:39:33, :105:30, :129:41
  wire             _alu_op2Sel_T_14 = idu_reg_inst[6:0] == 7'h33;	// src/main/scala/npc/idu.scala:39:33, :105:30, :129:41
  wire             _alu_op2Sel_T_16 = idu_reg_inst[6:0] == 7'h13;	// src/main/scala/npc/idu.scala:39:33, :105:30, :129:41
  wire [3:0][31:0] _GEN_3 =
    {{io_rs2_data},
     {{{20{idu_reg_inst[31]}}, idu_reg_inst[31:25], idu_reg_inst[11:7]}},
     {{_imm_i_sext_T_1, idu_reg_inst[31:20]}},
     {idu_reg_pc}};	// src/main/scala/npc/idu.scala:39:33, :40:31, :76:32, :81:29, :82:33, :88:{25,30}, :89:{25,30,39}, :155:45
  always @(posedge clock) begin	// src/main/scala/npc/idu.scala:35:7
    if (io_in_ready_0 & io_in_valid) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/npc/idu.scala:51:19, :54:27
      idu_reg_inst <= io_in_bits_inst;	// src/main/scala/npc/idu.scala:39:33
      idu_reg_pc <= io_in_bits_pc;	// src/main/scala/npc/idu.scala:40:31
    end
    if (reset)	// src/main/scala/npc/idu.scala:35:7
      state <= 2'h0;	// src/main/scala/npc/idu.scala:35:7, :48:24
    else if (_GEN) begin	// src/main/scala/npc/idu.scala:51:19
      if (io_in_valid)	// src/main/scala/npc/idu.scala:36:16
        state <= 2'h1;	// src/main/scala/npc/idu.scala:35:7, :48:24
    end
    else if (_GEN_0)	// src/main/scala/npc/idu.scala:51:19
      state <= 2'h2;	// src/main/scala/npc/idu.scala:35:7, :48:24
    else if (_GEN_1 & io_out_ready)	// src/main/scala/npc/idu.scala:48:24, :51:19, :69:30, :70:19
      state <= 2'h0;	// src/main/scala/npc/idu.scala:35:7, :48:24
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/npc/idu.scala:35:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/npc/idu.scala:35:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/npc/idu.scala:35:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/npc/idu.scala:35:7
      automatic logic [31:0] _RANDOM[0:2];	// src/main/scala/npc/idu.scala:35:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/npc/idu.scala:35:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/npc/idu.scala:35:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/npc/idu.scala:35:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/npc/idu.scala:35:7
        end	// src/main/scala/npc/idu.scala:35:7
        idu_reg_inst = _RANDOM[2'h0];	// src/main/scala/npc/idu.scala:35:7, :39:33
        idu_reg_pc = _RANDOM[2'h1];	// src/main/scala/npc/idu.scala:35:7, :40:31
        state = _RANDOM[2'h2][1:0];	// src/main/scala/npc/idu.scala:35:7, :48:24
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/npc/idu.scala:35:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/npc/idu.scala:35:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_ready = io_in_ready_0;	// src/main/scala/npc/idu.scala:35:7, :51:19, :54:27
  assign io_out_valid = ~(_GEN | _GEN_0) & _GEN_1;	// src/main/scala/npc/idu.scala:35:7, :51:19, :53:22, :62:24
  assign io_out_bits_inst = idu_reg_inst;	// src/main/scala/npc/idu.scala:35:7, :39:33
  assign io_out_bits_pc = idu_reg_pc;	// src/main/scala/npc/idu.scala:35:7, :40:31
  assign io_out_bits_wb_addr = idu_reg_inst[11:7];	// src/main/scala/npc/idu.scala:35:7, :39:33, :76:32
  assign io_out_bits_alu_op1 =
    ~(_alu_op2Sel_T_16 | _alu_op2Sel_T_14 | _alu_op2Sel_T_12 | _alu_op2Sel_T_11
      | _alu_op2Sel_T_8 | _alu_op2Sel_T_6 | _alu_op2Sel_T_4)
    & (idu_reg_inst[6:0] == 7'h17 | idu_reg_inst[6:0] == 7'h37)
      ? {idu_reg_inst[31:12], 12'h0}
      : io_rs1_data;	// src/main/scala/npc/idu.scala:35:7, :39:33, :84:29, :91:{25,37}, :105:30, :119:40, :129:41, :154:22
  assign io_out_bits_alu_op2 =
    _GEN_3[_alu_op2Sel_T_16
             ? 2'h1
             : _alu_op2Sel_T_14
                 ? 2'h3
                 : _alu_op2Sel_T_12 ? 2'h2 : {1'h0, _alu_op2Sel_T_11}];	// src/main/scala/npc/idu.scala:35:7, :43:17, :129:41, :141:41, :155:45
  assign io_out_bits_rs2_data = io_rs2_data;	// src/main/scala/npc/idu.scala:35:7
  assign io_jump_reg_target =
    io_rs1_data + {_imm_i_sext_T_1, idu_reg_inst[31:20]} & 32'hFFFFFFFE;	// src/main/scala/npc/idu.scala:35:7, :39:33, :81:29, :88:30, :95:{47,68,70}
  assign io_br_target =
    idu_reg_pc
    + {{20{idu_reg_inst[31]}},
       idu_reg_inst[7],
       idu_reg_inst[30:25],
       idu_reg_inst[11:8],
       1'h0};	// src/main/scala/npc/idu.scala:35:7, :39:33, :40:31, :43:17, :83:{33,51,68,90}, :90:25, :96:32
  assign io_jmp_target =
    idu_reg_pc
    + {{12{idu_reg_inst[31]}},
       idu_reg_inst[19:12],
       idu_reg_inst[20],
       idu_reg_inst[30:21],
       1'h0};	// src/main/scala/npc/idu.scala:35:7, :39:33, :40:31, :43:17, :83:33, :85:{51,73,91}, :92:25, :97:33
  assign io_pc_sel =
    {1'h0,
     _alu_op2Sel_T_8
       ? {_GEN_2[idu_reg_inst[14:12]], 1'h0}
       : _alu_op2Sel_T_6 ? 2'h3 : {1'h0, _alu_op2Sel_T_4}};	// src/main/scala/npc/idu.scala:35:7, :39:33, :43:17, :106:30, :109:50, :119:{15,40}, :122:29
  assign io_rs1_addr = idu_reg_inst[19:15];	// src/main/scala/npc/idu.scala:35:7, :39:33, :77:32
  assign io_rs2_addr = idu_reg_inst[24:20];	// src/main/scala/npc/idu.scala:35:7, :39:33, :78:32
endmodule

module ALU(	// src/main/scala/common/alu.scala:8:7
  input  [31:0] io_a,	// src/main/scala/common/alu.scala:9:14
                io_b,	// src/main/scala/common/alu.scala:9:14
  input  [4:0]  io_aluOp,	// src/main/scala/common/alu.scala:9:14
  output [31:0] io_result	// src/main/scala/common/alu.scala:9:14
);

  wire [62:0] _io_result_T_19 = {31'h0, io_a} << io_b[4:0];	// src/main/scala/common/alu.scala:16:23, :26:41
  wire [31:0] _GEN = {27'h0, io_b[4:0]};	// src/main/scala/common/alu.scala:16:23, :27:47
  assign io_result =
    io_aluOp == 5'h0
      ? io_a + io_b
      : io_aluOp == 5'h1
          ? io_a - io_b
          : io_aluOp == 5'h2
              ? io_a & io_b
              : io_aluOp == 5'h3
                  ? io_a | io_b
                  : io_aluOp == 5'h4
                      ? io_a ^ io_b
                      : io_aluOp == 5'h5
                          ? {31'h0, $signed(io_a) < $signed(io_b)}
                          : io_aluOp == 5'h6
                              ? {31'h0, io_a < io_b}
                              : io_aluOp == 5'h7
                                  ? _io_result_T_19[31:0]
                                  : io_aluOp == 5'h8
                                      ? $signed($signed(io_a) >>> _GEN)
                                      : io_aluOp == 5'h9
                                          ? io_a >> _GEN
                                          : io_aluOp == 5'hF ? io_a : 32'h0;	// src/main/scala/chisel3/util/Mux.scala:126:16, src/main/scala/common/alu.scala:8:7, :19:{17,40}, :20:{17,40}, :21:{17,40}, :22:{17,40}, :23:{17,40}, :24:{17,47}, :25:{17,40}, :26:{17,41,54}, :27:{17,47}, :28:{17,40}, :29:17
endmodule

module EXU(	// src/main/scala/npc/exu.scala:24:7
  input         clock,	// src/main/scala/npc/exu.scala:24:7
                reset,	// src/main/scala/npc/exu.scala:24:7
  output        io_in_ready,	// src/main/scala/npc/exu.scala:25:14
  input         io_in_valid,	// src/main/scala/npc/exu.scala:25:14
  input  [31:0] io_in_bits_inst,	// src/main/scala/npc/exu.scala:25:14
                io_in_bits_pc,	// src/main/scala/npc/exu.scala:25:14
  input  [4:0]  io_in_bits_wb_addr,	// src/main/scala/npc/exu.scala:25:14
  input  [31:0] io_in_bits_alu_op1,	// src/main/scala/npc/exu.scala:25:14
                io_in_bits_alu_op2,	// src/main/scala/npc/exu.scala:25:14
                io_in_bits_rs2_data,	// src/main/scala/npc/exu.scala:25:14
  input         io_out_ready,	// src/main/scala/npc/exu.scala:25:14
  output        io_out_valid,	// src/main/scala/npc/exu.scala:25:14
  output [31:0] io_out_bits_inst,	// src/main/scala/npc/exu.scala:25:14
                io_out_bits_pc,	// src/main/scala/npc/exu.scala:25:14
                io_out_bits_dmem_addr,	// src/main/scala/npc/exu.scala:25:14
                io_out_bits_result,	// src/main/scala/npc/exu.scala:25:14
                io_out_bits_rs2_data,	// src/main/scala/npc/exu.scala:25:14
  output [4:0]  io_out_bits_wb_addr	// src/main/scala/npc/exu.scala:25:14
);

  wire [31:0]     _alu_instance_io_result;	// src/main/scala/npc/exu.scala:106:28
  reg  [1:0]      state;	// src/main/scala/npc/exu.scala:29:22
  wire            _GEN = state == 2'h0;	// src/main/scala/npc/exu.scala:24:7, :29:22, :36:17
  wire            _GEN_0 = state == 2'h1;	// src/main/scala/npc/exu.scala:24:7, :29:22, :36:17
  wire            _GEN_1 = state == 2'h2;	// src/main/scala/npc/exu.scala:24:7, :29:22, :36:17
  wire            io_in_ready_0 = _GEN & io_in_valid;	// src/main/scala/npc/exu.scala:36:17, :38:25
  reg  [31:0]     exu_reg_inst;	// src/main/scala/npc/exu.scala:61:31
  reg  [31:0]     exu_reg_pc;	// src/main/scala/npc/exu.scala:62:29
  reg  [31:0]     exu_reg_rs2_data;	// src/main/scala/npc/exu.scala:63:35
  reg  [4:0]      exu_reg_wb_addr;	// src/main/scala/npc/exu.scala:64:34
  wire            _alu_op_T_18 = exu_reg_inst[31:25] == 7'h0;	// src/main/scala/npc/exu.scala:61:31, :76:28, :89:25
  wire [7:0][4:0] _GEN_2 =
    {{5'h2}, {5'h3}, {{4'h4, _alu_op_T_18}}, {5'h4}, {5'h6}, {5'h5}, {5'h7}, {5'h0}};	// src/main/scala/npc/exu.scala:83:43, :89:{17,25}
  wire [7:0][4:0] _GEN_3 =
    {{5'h2},
     {5'h3},
     {{4'h4, _alu_op_T_18}},
     {5'h4},
     {5'h6},
     {5'h5},
     {5'h7},
     {{4'h0, ~_alu_op_T_18}}};	// src/main/scala/npc/exu.scala:83:43, :89:{17,25}, :93:43, :94:17, :99:17
  always @(posedge clock) begin	// src/main/scala/npc/exu.scala:24:7
    if (reset)	// src/main/scala/npc/exu.scala:24:7
      state <= 2'h0;	// src/main/scala/npc/exu.scala:24:7, :29:22
    else if (_GEN) begin	// src/main/scala/npc/exu.scala:36:17
      if (io_in_valid)	// src/main/scala/npc/exu.scala:25:14
        state <= 2'h1;	// src/main/scala/npc/exu.scala:24:7, :29:22
    end
    else if (_GEN_0)	// src/main/scala/npc/exu.scala:36:17
      state <= 2'h2;	// src/main/scala/npc/exu.scala:24:7, :29:22
    else if (_GEN_1 & io_out_ready)	// src/main/scala/npc/exu.scala:29:22, :36:17, :54:26, :55:15
      state <= 2'h0;	// src/main/scala/npc/exu.scala:24:7, :29:22
    if (io_in_ready_0 & io_in_valid) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/npc/exu.scala:36:17, :38:25
      exu_reg_inst <= io_in_bits_inst;	// src/main/scala/npc/exu.scala:61:31
      exu_reg_pc <= io_in_bits_pc;	// src/main/scala/npc/exu.scala:62:29
      exu_reg_rs2_data <= io_in_bits_rs2_data;	// src/main/scala/npc/exu.scala:63:35
      exu_reg_wb_addr <= io_in_bits_wb_addr;	// src/main/scala/npc/exu.scala:64:34
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/npc/exu.scala:24:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/npc/exu.scala:24:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/npc/exu.scala:24:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/npc/exu.scala:24:7
      automatic logic [31:0] _RANDOM[0:3];	// src/main/scala/npc/exu.scala:24:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/npc/exu.scala:24:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/npc/exu.scala:24:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/npc/exu.scala:24:7
        for (logic [2:0] i = 3'h0; i < 3'h4; i += 3'h1) begin
          _RANDOM[i[1:0]] = `RANDOM;	// src/main/scala/npc/exu.scala:24:7
        end	// src/main/scala/npc/exu.scala:24:7
        state = _RANDOM[2'h0][1:0];	// src/main/scala/npc/exu.scala:24:7, :29:22
        exu_reg_inst = {_RANDOM[2'h0][31:2], _RANDOM[2'h1][1:0]};	// src/main/scala/npc/exu.scala:24:7, :29:22, :61:31
        exu_reg_pc = {_RANDOM[2'h1][31:2], _RANDOM[2'h2][1:0]};	// src/main/scala/npc/exu.scala:24:7, :61:31, :62:29
        exu_reg_rs2_data = {_RANDOM[2'h2][31:2], _RANDOM[2'h3][1:0]};	// src/main/scala/npc/exu.scala:24:7, :62:29, :63:35
        exu_reg_wb_addr = _RANDOM[2'h3][6:2];	// src/main/scala/npc/exu.scala:24:7, :63:35, :64:34
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/npc/exu.scala:24:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/npc/exu.scala:24:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  ALU alu_instance (	// src/main/scala/npc/exu.scala:106:28
    .io_a      (io_in_bits_alu_op1),
    .io_b      (io_in_bits_alu_op2),
    .io_aluOp
      (exu_reg_inst[6:0] == 7'h33
         ? _GEN_3[exu_reg_inst[14:12]]
         : exu_reg_inst[6:0] == 7'h13
             ? _GEN_2[exu_reg_inst[14:12]]
             : exu_reg_inst[6:0] == 7'h23 | exu_reg_inst[6:0] == 7'h3
               | exu_reg_inst[6:0] == 7'h17 | exu_reg_inst[6:0] != 7'h37
                 ? 5'h0
                 : 5'hF),	// src/main/scala/npc/exu.scala:61:31, :74:28, :75:28, :78:35, :83:43, :93:43
    .io_result (_alu_instance_io_result)
  );
  assign io_in_ready = io_in_ready_0;	// src/main/scala/npc/exu.scala:24:7, :36:17, :38:25
  assign io_out_valid = ~(_GEN | _GEN_0) & _GEN_1;	// src/main/scala/npc/exu.scala:24:7, :36:17, :38:25, :47:20
  assign io_out_bits_inst = exu_reg_inst;	// src/main/scala/npc/exu.scala:24:7, :61:31
  assign io_out_bits_pc = exu_reg_pc;	// src/main/scala/npc/exu.scala:24:7, :62:29
  assign io_out_bits_dmem_addr = _alu_instance_io_result;	// src/main/scala/npc/exu.scala:24:7, :106:28
  assign io_out_bits_result = _alu_instance_io_result;	// src/main/scala/npc/exu.scala:24:7, :106:28
  assign io_out_bits_rs2_data = exu_reg_rs2_data;	// src/main/scala/npc/exu.scala:24:7, :63:35
  assign io_out_bits_wb_addr = exu_reg_wb_addr;	// src/main/scala/npc/exu.scala:24:7, :64:34
endmodule

module AlignmentNetwork(	// src/main/scala/common/AlignmentNetwork.scala:6:7
  input  [31:0] io_data_in,	// src/main/scala/common/AlignmentNetwork.scala:7:14
                io_dmem_addr,	// src/main/scala/common/AlignmentNetwork.scala:7:14
  input  [2:0]  io_control,	// src/main/scala/common/AlignmentNetwork.scala:7:14
  output [31:0] io_data_out	// src/main/scala/common/AlignmentNetwork.scala:7:14
);

  wire [31:0]      shifted_data = io_data_in >> {27'h0, io_dmem_addr[1:0], 3'h0};	// src/main/scala/common/AlignmentNetwork.scala:15:34, :16:33, :25:44
  wire [7:0][31:0] _GEN =
    {{32'h0},
     {32'h0},
     {{16'h0, shifted_data[15:0]}},
     {{24'h0, shifted_data[7:0]}},
     {32'h0},
     {io_data_in},
     {{{16{shifted_data[15]}}, shifted_data[15:0]}},
     {{{24{shifted_data[7]}}, shifted_data[7:0]}}};	// src/main/scala/common/AlignmentNetwork.scala:16:33, :19:{26,50}, :20:{26,50}, :21:{26,31,48}, :22:{26,31,48}, :25:44
  assign io_data_out = _GEN[io_control];	// src/main/scala/common/AlignmentNetwork.scala:6:7, :25:44
endmodule

module WriteMaskGenerator(	// src/main/scala/common/WriteMaskGenerator.scala:6:7
  input  [31:0] io_dmem_addr,	// src/main/scala/common/WriteMaskGenerator.scala:7:14
                io_dmem_wdata_raw,	// src/main/scala/common/WriteMaskGenerator.scala:7:14
  input  [2:0]  io_control,	// src/main/scala/common/WriteMaskGenerator.scala:7:14
  output [7:0]  io_wmask,	// src/main/scala/common/WriteMaskGenerator.scala:7:14
  output [31:0] io_dmem_wdata	// src/main/scala/common/WriteMaskGenerator.scala:7:14
);

  wire [14:0] _io_wmask_T_1 =
    {7'h0,
     io_control == 3'h0
       ? 8'h1
       : io_control == 3'h1 ? 8'h3 : io_control == 3'h2 ? 8'hF : 8'h0}
    << io_dmem_addr[1:0];	// src/main/scala/common/WriteMaskGenerator.scala:16:45, :23:34, :24:25
  wire [94:0] _io_dmem_wdata_T_1 =
    {63'h0, io_dmem_wdata_raw} << {90'h0, io_dmem_addr[1:0], 3'h0};	// src/main/scala/common/WriteMaskGenerator.scala:16:45, :23:34, :26:38
  assign io_wmask = _io_wmask_T_1[7:0];	// src/main/scala/common/WriteMaskGenerator.scala:6:7, :24:{12,25}
  assign io_dmem_wdata = _io_dmem_wdata_T_1[31:0];	// src/main/scala/common/WriteMaskGenerator.scala:6:7, :26:{17,38}
endmodule

module LSU(	// src/main/scala/npc/lsu.scala:29:7
  input         clock,	// src/main/scala/npc/lsu.scala:29:7
                reset,	// src/main/scala/npc/lsu.scala:29:7
  output        io_in_ready,	// src/main/scala/npc/lsu.scala:30:14
  input         io_in_valid,	// src/main/scala/npc/lsu.scala:30:14
  input  [31:0] io_in_bits_inst,	// src/main/scala/npc/lsu.scala:30:14
                io_in_bits_pc,	// src/main/scala/npc/lsu.scala:30:14
                io_in_bits_dmem_addr,	// src/main/scala/npc/lsu.scala:30:14
                io_in_bits_result,	// src/main/scala/npc/lsu.scala:30:14
                io_in_bits_rs2_data,	// src/main/scala/npc/lsu.scala:30:14
  input  [4:0]  io_in_bits_wb_addr,	// src/main/scala/npc/lsu.scala:30:14
  input         io_out_ready,	// src/main/scala/npc/lsu.scala:30:14
  output        io_out_valid,	// src/main/scala/npc/lsu.scala:30:14
  output [31:0] io_out_bits_inst,	// src/main/scala/npc/lsu.scala:30:14
                io_out_bits_pc,	// src/main/scala/npc/lsu.scala:30:14
                io_out_bits_dmem_rdata,	// src/main/scala/npc/lsu.scala:30:14
                io_out_bits_result,	// src/main/scala/npc/lsu.scala:30:14
  output [4:0]  io_out_bits_wb_addr,	// src/main/scala/npc/lsu.scala:30:14
  output        io_memory_aw_valid,	// src/main/scala/npc/lsu.scala:30:14
  input         io_memory_aw_ready,	// src/main/scala/npc/lsu.scala:30:14
  output [31:0] io_memory_aw_addr,	// src/main/scala/npc/lsu.scala:30:14
  output        io_memory_w_valid,	// src/main/scala/npc/lsu.scala:30:14
  input         io_memory_w_ready,	// src/main/scala/npc/lsu.scala:30:14
  output [31:0] io_memory_w_data,	// src/main/scala/npc/lsu.scala:30:14
  output [3:0]  io_memory_w_strb,	// src/main/scala/npc/lsu.scala:30:14
  input         io_memory_b_valid,	// src/main/scala/npc/lsu.scala:30:14
  output        io_memory_b_ready,	// src/main/scala/npc/lsu.scala:30:14
                io_memory_ar_valid,	// src/main/scala/npc/lsu.scala:30:14
  input         io_memory_ar_ready,	// src/main/scala/npc/lsu.scala:30:14
  output [31:0] io_memory_ar_addr,	// src/main/scala/npc/lsu.scala:30:14
  input         io_memory_r_valid,	// src/main/scala/npc/lsu.scala:30:14
  output        io_memory_r_ready,	// src/main/scala/npc/lsu.scala:30:14
  input  [31:0] io_memory_r_data,	// src/main/scala/npc/lsu.scala:30:14
  output [1:0]  io_lsu_state_debug,	// src/main/scala/npc/lsu.scala:30:14
  output        io_lsu_is_ld_or_st_debug,	// src/main/scala/npc/lsu.scala:30:14
  output [31:0] io_lsu_reg_inst_debug	// src/main/scala/npc/lsu.scala:30:14
);

  wire        isStore;	// src/main/scala/npc/lsu.scala:84:17, :88:15
  wire        isLoad;	// src/main/scala/npc/lsu.scala:84:17, :87:14
  wire [7:0]  _write_mask_gen_io_wmask;	// src/main/scala/npc/lsu.scala:74:30
  wire [31:0] _write_mask_gen_io_dmem_wdata;	// src/main/scala/npc/lsu.scala:74:30
  reg  [31:0] lsu_reg_inst;	// src/main/scala/npc/lsu.scala:40:31
  reg  [31:0] lsu_reg_pc;	// src/main/scala/npc/lsu.scala:41:29
  reg  [31:0] lsu_reg_dmem_addr;	// src/main/scala/npc/lsu.scala:42:36
  reg  [31:0] lsu_reg_result;	// src/main/scala/npc/lsu.scala:43:33
  reg  [31:0] lsu_reg_rs2_data;	// src/main/scala/npc/lsu.scala:44:35
  reg  [4:0]  lsu_reg_wb_addr;	// src/main/scala/npc/lsu.scala:45:34
  wire [9:0]  _mem_access_control_T = {lsu_reg_inst[6:0], lsu_reg_inst[14:12]};	// src/main/scala/npc/lsu.scala:40:31, :48:28, :49:28, :55:38
  wire [2:0]  mem_access_control =
    _mem_access_control_T == 10'h119
      ? 3'h1
      : _mem_access_control_T == 10'h118
          ? 3'h0
          : _mem_access_control_T == 10'h11A
              ? 3'h2
              : _mem_access_control_T == 10'h1D
                  ? 3'h5
                  : _mem_access_control_T == 10'h19
                      ? 3'h1
                      : _mem_access_control_T == 10'h1C
                          ? 3'h4
                          : {1'h0,
                             _mem_access_control_T == 10'h18
                               ? 2'h0
                               : {_mem_access_control_T == 10'h1A, 1'h0}};	// src/main/scala/common/axi4_lite.scala:47:18, src/main/scala/npc/lsu.scala:29:7, :55:{38,60}, :56:8, :57:8, :58:8, :59:8, :60:8, :61:8, :62:8, :63:8, :81:22
  reg  [1:0]  state;	// src/main/scala/npc/lsu.scala:81:22
  wire        _GEN = state == 2'h0;	// src/main/scala/npc/lsu.scala:81:22, :84:17
  wire        _GEN_0 = state == 2'h1;	// src/main/scala/npc/lsu.scala:81:22, :84:17, :99:15
  wire        _GEN_1 = state == 2'h2;	// src/main/scala/npc/lsu.scala:55:60, :81:22, :84:17
  wire        _GEN_2 = _GEN | _GEN_0;	// src/main/scala/common/axi4_lite.scala:57:17, src/main/scala/npc/lsu.scala:84:17
  wire        _GEN_3 =
    _GEN_2 | ~_GEN_1 | isLoad | ~(isStore & io_memory_aw_ready & io_memory_w_ready);	// src/main/scala/common/axi4_lite.scala:48:17, :57:17, src/main/scala/npc/lsu.scala:84:17, :87:14, :88:15, :116:20, :126:27, :129:55, :130:29
  assign isLoad =
    ~_GEN & (_GEN_0 ? lsu_reg_inst[6:0] == 7'h3 : _GEN_1 & lsu_reg_inst[6:0] == 7'h3);	// src/main/scala/npc/lsu.scala:40:31, :48:28, :56:8, :84:17, :87:14, :105:{16,26}, :113:{14,24}
  assign isStore =
    ~_GEN & (_GEN_0 ? lsu_reg_inst[6:0] == 7'h23 : _GEN_1 & lsu_reg_inst[6:0] == 7'h23);	// src/main/scala/npc/lsu.scala:40:31, :48:28, :61:8, :84:17, :87:14, :88:15, :106:{17,27}, :114:{15,25}
  wire        io_in_ready_0 = _GEN ? io_in_valid : _GEN_0;	// src/main/scala/npc/lsu.scala:84:17, :97:25
  wire        io_memory_r_ready_0 = ~_GEN_2 & _GEN_1 & isLoad;	// src/main/scala/common/axi4_lite.scala:56:18, :57:17, src/main/scala/npc/lsu.scala:84:17, :87:14, :90:26
  wire        io_memory_b_ready_0 = ~_GEN_2 & _GEN_1 & ~isLoad & isStore;	// src/main/scala/common/axi4_lite.scala:47:18, :56:18, :57:17, src/main/scala/npc/lsu.scala:84:17, :87:14, :88:15, :90:26, :93:26, :116:20, :126:27
  always @(posedge clock) begin	// src/main/scala/npc/lsu.scala:29:7
    if (io_in_ready_0 & io_in_valid) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/npc/lsu.scala:84:17, :97:25
      lsu_reg_inst <= io_in_bits_inst;	// src/main/scala/npc/lsu.scala:40:31
      lsu_reg_pc <= io_in_bits_pc;	// src/main/scala/npc/lsu.scala:41:29
      lsu_reg_dmem_addr <= io_in_bits_dmem_addr;	// src/main/scala/npc/lsu.scala:42:36
      lsu_reg_result <= io_in_bits_result;	// src/main/scala/npc/lsu.scala:43:33
      lsu_reg_rs2_data <= io_in_bits_rs2_data;	// src/main/scala/npc/lsu.scala:44:35
      lsu_reg_wb_addr <= io_in_bits_wb_addr;	// src/main/scala/npc/lsu.scala:45:34
    end
    if (reset)	// src/main/scala/npc/lsu.scala:29:7
      state <= 2'h0;	// src/main/scala/npc/lsu.scala:81:22
    else begin	// src/main/scala/npc/lsu.scala:29:7
      automatic logic [3:0][1:0] _GEN_4;	// src/main/scala/npc/lsu.scala:84:17, :97:25, :107:15, :116:20
      _GEN_4 =
        {{(&state) & io_out_ready ? 2'h0 : state},
         {(isLoad ? io_memory_r_valid : isStore & io_memory_b_valid) ? 2'h3 : state},
         {{1'h1, ~(isLoad | isStore)}},
         {io_in_valid ? 2'h1 : state}};	// src/main/scala/npc/lsu.scala:81:22, :84:17, :87:14, :88:15, :97:25, :99:15, :107:{15,21,29}, :116:20, :122:33, :123:17, :126:27, :136:33, :137:17, :156:26, :157:15
      state <= _GEN_4[state];	// src/main/scala/npc/lsu.scala:81:22, :84:17, :97:25, :107:15, :116:20
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/npc/lsu.scala:29:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/npc/lsu.scala:29:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/npc/lsu.scala:29:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/npc/lsu.scala:29:7
      automatic logic [31:0] _RANDOM[0:5];	// src/main/scala/npc/lsu.scala:29:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/npc/lsu.scala:29:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/npc/lsu.scala:29:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/npc/lsu.scala:29:7
        for (logic [2:0] i = 3'h0; i < 3'h6; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/npc/lsu.scala:29:7
        end	// src/main/scala/npc/lsu.scala:29:7
        lsu_reg_inst = _RANDOM[3'h0];	// src/main/scala/npc/lsu.scala:29:7, :40:31
        lsu_reg_pc = _RANDOM[3'h1];	// src/main/scala/npc/lsu.scala:29:7, :41:29
        lsu_reg_dmem_addr = _RANDOM[3'h2];	// src/main/scala/npc/lsu.scala:29:7, :42:36
        lsu_reg_result = _RANDOM[3'h3];	// src/main/scala/npc/lsu.scala:29:7, :43:33
        lsu_reg_rs2_data = _RANDOM[3'h4];	// src/main/scala/npc/lsu.scala:29:7, :44:35
        lsu_reg_wb_addr = _RANDOM[3'h5][4:0];	// src/main/scala/npc/lsu.scala:29:7, :45:34
        state = _RANDOM[3'h5][6:5];	// src/main/scala/npc/lsu.scala:29:7, :45:34, :81:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/npc/lsu.scala:29:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/npc/lsu.scala:29:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  AlignmentNetwork alignment_network (	// src/main/scala/npc/lsu.scala:67:33
    .io_data_in   (io_memory_r_data),
    .io_dmem_addr (lsu_reg_dmem_addr),	// src/main/scala/npc/lsu.scala:42:36
    .io_control   (mem_access_control),	// src/main/scala/npc/lsu.scala:55:60
    .io_data_out  (io_out_bits_dmem_rdata)
  );
  WriteMaskGenerator write_mask_gen (	// src/main/scala/npc/lsu.scala:74:30
    .io_dmem_addr      (lsu_reg_dmem_addr),	// src/main/scala/npc/lsu.scala:42:36
    .io_dmem_wdata_raw (lsu_reg_rs2_data),	// src/main/scala/npc/lsu.scala:44:35
    .io_control        (mem_access_control),	// src/main/scala/npc/lsu.scala:55:60
    .io_wmask          (_write_mask_gen_io_wmask),
    .io_dmem_wdata     (_write_mask_gen_io_dmem_wdata)
  );
  assign io_in_ready = io_in_ready_0;	// src/main/scala/npc/lsu.scala:29:7, :84:17, :97:25
  assign io_out_valid = ~(_GEN | _GEN_0 | _GEN_1) & (&state);	// src/main/scala/npc/lsu.scala:29:7, :37:16, :81:22, :84:17
  assign io_out_bits_inst = lsu_reg_inst;	// src/main/scala/npc/lsu.scala:29:7, :40:31
  assign io_out_bits_pc = lsu_reg_pc;	// src/main/scala/npc/lsu.scala:29:7, :41:29
  assign io_out_bits_result = lsu_reg_result;	// src/main/scala/npc/lsu.scala:29:7, :43:33
  assign io_out_bits_wb_addr = lsu_reg_wb_addr;	// src/main/scala/npc/lsu.scala:29:7, :45:34
  assign io_memory_aw_valid = io_memory_b_ready_0;	// src/main/scala/common/axi4_lite.scala:47:18, src/main/scala/npc/lsu.scala:29:7, :84:17, :93:26
  assign io_memory_aw_addr = _GEN_3 ? 32'h0 : lsu_reg_dmem_addr;	// src/main/scala/common/axi4_lite.scala:48:17, src/main/scala/npc/lsu.scala:29:7, :42:36, :84:17
  assign io_memory_w_valid = io_memory_b_ready_0;	// src/main/scala/common/axi4_lite.scala:47:18, src/main/scala/npc/lsu.scala:29:7, :84:17, :93:26
  assign io_memory_w_data = _GEN_3 ? 32'h0 : _write_mask_gen_io_dmem_wdata;	// src/main/scala/common/axi4_lite.scala:48:17, :51:16, src/main/scala/npc/lsu.scala:29:7, :74:30, :84:17
  assign io_memory_w_strb = _GEN_3 ? 4'h0 : _write_mask_gen_io_wmask[3:0];	// src/main/scala/common/axi4_lite.scala:48:17, :52:16, src/main/scala/npc/lsu.scala:29:7, :74:30, :84:17, :132:28
  assign io_memory_b_ready = io_memory_b_ready_0;	// src/main/scala/common/axi4_lite.scala:47:18, src/main/scala/npc/lsu.scala:29:7, :84:17, :93:26
  assign io_memory_ar_valid = io_memory_r_ready_0;	// src/main/scala/common/axi4_lite.scala:56:18, src/main/scala/npc/lsu.scala:29:7, :84:17, :90:26
  assign io_memory_ar_addr =
    _GEN_2 | ~(_GEN_1 & isLoad & io_memory_ar_ready) ? 32'h0 : lsu_reg_dmem_addr;	// src/main/scala/common/axi4_lite.scala:48:17, :57:17, src/main/scala/npc/lsu.scala:29:7, :42:36, :84:17, :87:14, :116:20, :118:34, :119:29
  assign io_memory_r_ready = io_memory_r_ready_0;	// src/main/scala/common/axi4_lite.scala:56:18, src/main/scala/npc/lsu.scala:29:7, :84:17, :90:26
  assign io_lsu_state_debug = state;	// src/main/scala/npc/lsu.scala:29:7, :81:22
  assign io_lsu_is_ld_or_st_debug = isLoad | isStore;	// src/main/scala/npc/lsu.scala:29:7, :84:17, :87:14, :88:15, :170:38
  assign io_lsu_reg_inst_debug = lsu_reg_inst;	// src/main/scala/npc/lsu.scala:29:7, :40:31
endmodule

module WBU(	// src/main/scala/npc/wbu.scala:28:7
  input         clock,	// src/main/scala/npc/wbu.scala:28:7
                reset,	// src/main/scala/npc/wbu.scala:28:7
  output        io_in_ready,	// src/main/scala/npc/wbu.scala:29:14
  input         io_in_valid,	// src/main/scala/npc/wbu.scala:29:14
  input  [31:0] io_in_bits_inst,	// src/main/scala/npc/wbu.scala:29:14
                io_in_bits_pc,	// src/main/scala/npc/wbu.scala:29:14
                io_in_bits_dmem_rdata,	// src/main/scala/npc/wbu.scala:29:14
                io_in_bits_result,	// src/main/scala/npc/wbu.scala:29:14
  input  [4:0]  io_in_bits_wb_addr,	// src/main/scala/npc/wbu.scala:29:14
  output [31:0] io_wb_data,	// src/main/scala/npc/wbu.scala:29:14
  output [4:0]  io_wb_addr,	// src/main/scala/npc/wbu.scala:29:14
  output        io_wb_wen,	// src/main/scala/npc/wbu.scala:29:14
                io_pc_wen,	// src/main/scala/npc/wbu.scala:29:14
  output [1:0]  io_wbu_state_debug,	// src/main/scala/npc/wbu.scala:29:14
  output [31:0] io_wb_data_debug,	// src/main/scala/npc/wbu.scala:29:14
  output        io_wb_wen_debug,	// src/main/scala/npc/wbu.scala:29:14
  output [1:0]  io_wb_sel_debug	// src/main/scala/npc/wbu.scala:29:14
);

  reg  [1:0]       state;	// src/main/scala/npc/wbu.scala:40:22
  wire             io_in_ready_0 = state == 2'h0 & io_in_valid;	// src/main/scala/npc/wbu.scala:40:22, :43:17, :46:25
  reg  [31:0]      wbu_reg_inst;	// src/main/scala/npc/wbu.scala:64:31
  reg  [31:0]      wbu_reg_pc;	// src/main/scala/npc/wbu.scala:65:29
  reg  [31:0]      wbu_reg_result;	// src/main/scala/npc/wbu.scala:66:33
  reg  [31:0]      wbu_reg_dmem_rdata;	// src/main/scala/npc/wbu.scala:67:37
  reg  [4:0]       wbu_reg_wb_addr;	// src/main/scala/npc/wbu.scala:68:34
  wire             _wb_wen_T_1 = wbu_reg_inst[6:0] == 7'h37;	// src/main/scala/npc/wbu.scala:64:31, :71:28, :80:35
  wire             _wb_wen_T_2 = wbu_reg_inst[6:0] == 7'h17;	// src/main/scala/npc/wbu.scala:64:31, :71:28, :80:35
  wire             _wb_wen_T_4 = wbu_reg_inst[6:0] == 7'h33;	// src/main/scala/npc/wbu.scala:64:31, :71:28, :80:35
  wire             _wb_wen_T_6 = wbu_reg_inst[6:0] == 7'h13;	// src/main/scala/npc/wbu.scala:64:31, :71:28, :80:35
  wire             _wb_wen_T_8 = wbu_reg_inst[6:0] == 7'h3;	// src/main/scala/npc/wbu.scala:64:31, :71:28, :80:35
  wire             _wb_wen_T_10 = wbu_reg_inst[6:0] == 7'h6F;	// src/main/scala/npc/wbu.scala:64:31, :71:28, :80:35
  wire             _wb_wen_T_12 = wbu_reg_inst[6:0] == 7'h67;	// src/main/scala/npc/wbu.scala:64:31, :71:28, :80:35
  wire [1:0]       wb_sel =
    _wb_wen_T_12 | _wb_wen_T_10
      ? 2'h1
      : wbu_reg_inst[6:0] == 7'h73 | wbu_reg_inst[6:0] == 7'h63
          ? 2'h0
          : _wb_wen_T_8
              ? 2'h3
              : {_wb_wen_T_6 | _wb_wen_T_4 | _wb_wen_T_2 | _wb_wen_T_1, 1'h0};	// src/main/scala/npc/wbu.scala:40:22, :48:15, :64:31, :71:28, :80:35
  wire [3:0][31:0] _GEN =
    {{wbu_reg_dmem_rdata}, {wbu_reg_result}, {wbu_reg_pc + 32'h4}, {32'h0}};	// src/main/scala/npc/wbu.scala:65:29, :66:33, :67:37, :76:29, :94:36
  wire             io_wb_wen_0 =
    (_wb_wen_T_12 | _wb_wen_T_10 | _wb_wen_T_8 | _wb_wen_T_6 | _wb_wen_T_4 | _wb_wen_T_2
     | _wb_wen_T_1) & state == 2'h1;	// src/main/scala/npc/wbu.scala:40:22, :48:15, :80:35, :103:39, :116:{23,33}
  always @(posedge clock) begin	// src/main/scala/npc/wbu.scala:28:7
    if (reset)	// src/main/scala/npc/wbu.scala:28:7
      state <= 2'h0;	// src/main/scala/npc/wbu.scala:40:22
    else begin	// src/main/scala/npc/wbu.scala:28:7
      automatic logic [3:0][1:0] _GEN_0;	// src/main/scala/npc/wbu.scala:40:22, :43:17, :46:25, :54:13, :59:13
      _GEN_0 = {{state}, {2'h0}, {2'h2}, {io_in_valid ? 2'h1 : state}};	// src/main/scala/npc/wbu.scala:40:22, :43:17, :46:25, :48:15, :54:13, :59:13
      state <= _GEN_0[state];	// src/main/scala/npc/wbu.scala:40:22, :43:17, :46:25, :54:13, :59:13
    end
    if (io_in_ready_0 & io_in_valid) begin	// src/main/scala/chisel3/util/Decoupled.scala:51:35, src/main/scala/npc/wbu.scala:43:17, :46:25
      wbu_reg_inst <= io_in_bits_inst;	// src/main/scala/npc/wbu.scala:64:31
      wbu_reg_pc <= io_in_bits_pc;	// src/main/scala/npc/wbu.scala:65:29
      wbu_reg_result <= io_in_bits_result;	// src/main/scala/npc/wbu.scala:66:33
      wbu_reg_dmem_rdata <= io_in_bits_dmem_rdata;	// src/main/scala/npc/wbu.scala:67:37
      wbu_reg_wb_addr <= io_in_bits_wb_addr;	// src/main/scala/npc/wbu.scala:68:34
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/npc/wbu.scala:28:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/npc/wbu.scala:28:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/npc/wbu.scala:28:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/npc/wbu.scala:28:7
      automatic logic [31:0] _RANDOM[0:4];	// src/main/scala/npc/wbu.scala:28:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/npc/wbu.scala:28:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/npc/wbu.scala:28:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/npc/wbu.scala:28:7
        for (logic [2:0] i = 3'h0; i < 3'h5; i += 3'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/npc/wbu.scala:28:7
        end	// src/main/scala/npc/wbu.scala:28:7
        state = _RANDOM[3'h0][1:0];	// src/main/scala/npc/wbu.scala:28:7, :40:22
        wbu_reg_inst = {_RANDOM[3'h0][31:2], _RANDOM[3'h1][1:0]};	// src/main/scala/npc/wbu.scala:28:7, :40:22, :64:31
        wbu_reg_pc = {_RANDOM[3'h1][31:2], _RANDOM[3'h2][1:0]};	// src/main/scala/npc/wbu.scala:28:7, :64:31, :65:29
        wbu_reg_result = {_RANDOM[3'h2][31:2], _RANDOM[3'h3][1:0]};	// src/main/scala/npc/wbu.scala:28:7, :65:29, :66:33
        wbu_reg_dmem_rdata = {_RANDOM[3'h3][31:2], _RANDOM[3'h4][1:0]};	// src/main/scala/npc/wbu.scala:28:7, :66:33, :67:37
        wbu_reg_wb_addr = _RANDOM[3'h4][6:2];	// src/main/scala/npc/wbu.scala:28:7, :67:37, :68:34
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/npc/wbu.scala:28:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/npc/wbu.scala:28:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_in_ready = io_in_ready_0;	// src/main/scala/npc/wbu.scala:28:7, :43:17, :46:25
  assign io_wb_data = _GEN[wb_sel];	// src/main/scala/npc/wbu.scala:28:7, :80:35, :94:36
  assign io_wb_addr = wbu_reg_wb_addr;	// src/main/scala/npc/wbu.scala:28:7, :68:34
  assign io_wb_wen = io_wb_wen_0;	// src/main/scala/npc/wbu.scala:28:7, :116:23
  assign io_pc_wen = state == 2'h2;	// src/main/scala/npc/wbu.scala:28:7, :40:22, :54:13, :117:23
  assign io_wbu_state_debug = state;	// src/main/scala/npc/wbu.scala:28:7, :40:22
  assign io_wb_data_debug = _GEN[wb_sel];	// src/main/scala/npc/wbu.scala:28:7, :80:35, :94:36
  assign io_wb_wen_debug = io_wb_wen_0;	// src/main/scala/npc/wbu.scala:28:7, :116:23
  assign io_wb_sel_debug = wb_sel;	// src/main/scala/npc/wbu.scala:28:7, :80:35
endmodule

// external module RegisterFile

module MemoryArbiter(	// src/main/scala/common/MemoryArbiter.scala:6:7
  input         clock,	// src/main/scala/common/MemoryArbiter.scala:6:7
                reset,	// src/main/scala/common/MemoryArbiter.scala:6:7
                io_ifu_ar_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_ifu_ar_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input  [31:0] io_ifu_ar_addr,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_ifu_r_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input         io_ifu_r_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output [31:0] io_ifu_r_data,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input         io_lsu_aw_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_lsu_aw_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input  [31:0] io_lsu_aw_addr,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input         io_lsu_w_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_lsu_w_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input  [31:0] io_lsu_w_data,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input  [3:0]  io_lsu_w_strb,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_lsu_b_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input         io_lsu_b_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
                io_lsu_ar_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_lsu_ar_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input  [31:0] io_lsu_ar_addr,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_lsu_r_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input         io_lsu_r_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output [31:0] io_lsu_r_data,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_axi_aw_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input         io_axi_aw_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output [31:0] io_axi_aw_addr,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_axi_w_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input         io_axi_w_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output [31:0] io_axi_w_data,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output [3:0]  io_axi_w_strb,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input         io_axi_b_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_axi_b_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
                io_axi_ar_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input         io_axi_ar_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output [31:0] io_axi_ar_addr,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input         io_axi_r_valid,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output        io_axi_r_ready,	// src/main/scala/common/MemoryArbiter.scala:7:14
  input  [31:0] io_axi_r_data,	// src/main/scala/common/MemoryArbiter.scala:7:14
  output [1:0]  io_Arbiter_state_debug	// src/main/scala/common/MemoryArbiter.scala:7:14
);

  reg  [1:0]       state;	// src/main/scala/common/MemoryArbiter.scala:26:22
  wire             _GEN = state == 2'h0;	// src/main/scala/common/MemoryArbiter.scala:26:22, :29:17
  wire             _GEN_0 = state == 2'h1;	// src/main/scala/common/MemoryArbiter.scala:26:22, :29:17, :32:15
  wire             _GEN_1 = state == 2'h2;	// src/main/scala/common/MemoryArbiter.scala:26:22, :29:17, :34:15
  wire             _GEN_2 = _GEN | _GEN_0;	// src/main/scala/common/MemoryArbiter.scala:29:17, :41:14, src/main/scala/common/axi4_lite.scala:47:18
  wire             _GEN_3 = _GEN_2 | ~_GEN_1;	// src/main/scala/common/MemoryArbiter.scala:29:17, :41:14, src/main/scala/common/axi4_lite.scala:47:18, :48:17
  wire [3:0][31:0] _GEN_4 = {{32'h0}, {io_lsu_ar_addr}, {io_ifu_ar_addr}, {32'h0}};	// src/main/scala/common/MemoryArbiter.scala:7:14, :29:17, :41:14, :52:14, src/main/scala/common/axi4_lite.scala:57:17
  always @(posedge clock) begin	// src/main/scala/common/MemoryArbiter.scala:6:7
    if (reset)	// src/main/scala/common/MemoryArbiter.scala:6:7
      state <= 2'h0;	// src/main/scala/common/MemoryArbiter.scala:26:22
    else begin	// src/main/scala/common/MemoryArbiter.scala:6:7
      automatic logic            isIFUActive = io_ifu_ar_valid | io_ifu_r_ready;	// src/main/scala/common/MemoryArbiter.scala:21:37
      automatic logic [1:0]      _GEN_5 =
        isIFUActive
          ? 2'h1
          : {io_lsu_ar_valid | io_lsu_aw_valid | io_lsu_b_ready & ~isIFUActive, 1'h0};	// src/main/scala/common/MemoryArbiter.scala:6:7, :21:37, :22:{56,74,77}, :31:25, :32:15, :33:32, :34:15, :36:15
      automatic logic [3:0][1:0] _GEN_6;	// src/main/scala/common/MemoryArbiter.scala:29:17, :31:25, :42:25
      _GEN_6 = {{state}, {_GEN_5}, {_GEN_5}, {_GEN_5}};	// src/main/scala/common/MemoryArbiter.scala:26:22, :29:17, :31:25, :32:15, :33:32, :42:25
      state <= _GEN_6[state];	// src/main/scala/common/MemoryArbiter.scala:26:22, :29:17, :31:25, :42:25
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/common/MemoryArbiter.scala:6:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/common/MemoryArbiter.scala:6:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/common/MemoryArbiter.scala:6:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/common/MemoryArbiter.scala:6:7
      automatic logic [31:0] _RANDOM[0:0];	// src/main/scala/common/MemoryArbiter.scala:6:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/common/MemoryArbiter.scala:6:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/common/MemoryArbiter.scala:6:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/common/MemoryArbiter.scala:6:7
        _RANDOM[/*Zero width*/ 1'b0] = `RANDOM;	// src/main/scala/common/MemoryArbiter.scala:6:7
        state = _RANDOM[/*Zero width*/ 1'b0][1:0];	// src/main/scala/common/MemoryArbiter.scala:6:7, :26:22
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/common/MemoryArbiter.scala:6:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/common/MemoryArbiter.scala:6:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  assign io_ifu_ar_ready = ~_GEN & _GEN_0 & io_axi_ar_ready;	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, src/main/scala/common/axi4_lite.scala:69:18
  assign io_ifu_r_valid = ~_GEN & _GEN_0 & io_axi_r_valid;	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, src/main/scala/common/axi4_lite.scala:69:18, :70:17
  assign io_ifu_r_data = _GEN | ~_GEN_0 ? 32'h0 : io_axi_r_data;	// src/main/scala/common/MemoryArbiter.scala:6:7, :7:14, :29:17, src/main/scala/common/axi4_lite.scala:71:16
  assign io_lsu_aw_ready = ~_GEN_2 & _GEN_1 & io_axi_aw_ready;	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:47:18, :65:18
  assign io_lsu_w_ready = ~_GEN_2 & _GEN_1 & io_axi_w_ready;	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:47:18, :66:17
  assign io_lsu_b_valid = ~_GEN_2 & _GEN_1 & io_axi_b_valid;	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:47:18, :67:17
  assign io_lsu_ar_ready = ~_GEN_2 & _GEN_1 & io_axi_ar_ready;	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:47:18, :69:18
  assign io_lsu_r_valid = ~_GEN_2 & _GEN_1 & io_axi_r_valid;	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:47:18, :70:17
  assign io_lsu_r_data = _GEN_3 ? 32'h0 : io_axi_r_data;	// src/main/scala/common/MemoryArbiter.scala:6:7, :7:14, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:48:17, :71:16
  assign io_axi_aw_valid = ~_GEN_2 & _GEN_1 & io_lsu_aw_valid;	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:47:18
  assign io_axi_aw_addr = _GEN_3 ? 32'h0 : io_lsu_aw_addr;	// src/main/scala/common/MemoryArbiter.scala:6:7, :7:14, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:48:17
  assign io_axi_w_valid = ~_GEN_2 & _GEN_1 & io_lsu_w_valid;	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:47:18, :50:17
  assign io_axi_w_data = _GEN_3 ? 32'h0 : io_lsu_w_data;	// src/main/scala/common/MemoryArbiter.scala:6:7, :7:14, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:48:17, :51:16
  assign io_axi_w_strb = _GEN_3 ? 4'h0 : io_lsu_w_strb;	// src/main/scala/common/MemoryArbiter.scala:6:7, :7:14, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:48:17, :52:16
  assign io_axi_b_ready = ~_GEN_2 & _GEN_1 & io_lsu_b_ready;	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, :41:14, src/main/scala/common/axi4_lite.scala:47:18, :54:17
  assign io_axi_ar_valid = ~_GEN & (_GEN_0 ? io_ifu_ar_valid : _GEN_1 & io_lsu_ar_valid);	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, :41:14, :52:14, src/main/scala/common/axi4_lite.scala:56:18, :69:18
  assign io_axi_ar_addr = _GEN_4[state];	// src/main/scala/common/MemoryArbiter.scala:6:7, :26:22, :29:17, :41:14, :52:14, src/main/scala/common/axi4_lite.scala:57:17
  assign io_axi_r_ready = ~_GEN & (_GEN_0 ? io_ifu_r_ready : _GEN_1 & io_lsu_r_ready);	// src/main/scala/common/MemoryArbiter.scala:6:7, :29:17, :41:14, :52:14, src/main/scala/common/axi4_lite.scala:59:17, :69:18
  assign io_Arbiter_state_debug = state;	// src/main/scala/common/MemoryArbiter.scala:6:7, :26:22
endmodule

// external module SRAM

module SramAxi4LiteWrapper(	// src/main/scala/common/sram.scala:157:7
  input         clock,	// src/main/scala/common/sram.scala:157:7
                reset,	// src/main/scala/common/sram.scala:157:7
                io_clk,	// src/main/scala/common/sram.scala:158:14
                io_rst,	// src/main/scala/common/sram.scala:158:14
                io_axi_aw_valid,	// src/main/scala/common/sram.scala:158:14
  output        io_axi_aw_ready,	// src/main/scala/common/sram.scala:158:14
  input  [31:0] io_axi_aw_addr,	// src/main/scala/common/sram.scala:158:14
  input         io_axi_w_valid,	// src/main/scala/common/sram.scala:158:14
  output        io_axi_w_ready,	// src/main/scala/common/sram.scala:158:14
  input  [31:0] io_axi_w_data,	// src/main/scala/common/sram.scala:158:14
  input  [3:0]  io_axi_w_strb,	// src/main/scala/common/sram.scala:158:14
  output        io_axi_b_valid,	// src/main/scala/common/sram.scala:158:14
  input         io_axi_b_ready,	// src/main/scala/common/sram.scala:158:14
                io_axi_ar_valid,	// src/main/scala/common/sram.scala:158:14
  output        io_axi_ar_ready,	// src/main/scala/common/sram.scala:158:14
  input  [31:0] io_axi_ar_addr,	// src/main/scala/common/sram.scala:158:14
  output        io_axi_r_valid,	// src/main/scala/common/sram.scala:158:14
  input         io_axi_r_ready,	// src/main/scala/common/sram.scala:158:14
  output [31:0] io_axi_r_data	// src/main/scala/common/sram.scala:158:14
);

  wire [31:0] _sram_data_out;	// src/main/scala/common/sram.scala:177:20
  wire        _sram_rd_res_valid;	// src/main/scala/common/sram.scala:177:20
  wire        _sram_wt_res_valid;	// src/main/scala/common/sram.scala:177:20
  reg  [1:0]  state;	// src/main/scala/common/sram.scala:169:22
  reg  [31:0] addr_reg;	// src/main/scala/common/sram.scala:172:22
  reg  [31:0] wdata_reg;	// src/main/scala/common/sram.scala:173:22
  reg  [7:0]  wstrb_reg;	// src/main/scala/common/sram.scala:174:22
  reg         rd_req_valid;	// src/main/scala/common/sram.scala:182:29
  reg         wt_req_valid;	// src/main/scala/common/sram.scala:183:29
  wire        _GEN = state == 2'h0;	// src/main/scala/common/sram.scala:157:7, :169:22, :206:19
  wire        _GEN_0 = state == 2'h1;	// src/main/scala/common/sram.scala:157:7, :169:22, :206:19
  wire        io_axi_w_ready_0 = ~io_rst & _GEN;	// src/main/scala/common/sram.scala:194:16, :196:21, :206:19
  wire        _GEN_1 = state == 2'h2;	// src/main/scala/common/sram.scala:157:7, :169:22, :206:19
  wire        _GEN_2 = io_rst | _GEN | _GEN_0;	// src/main/scala/common/axi4_lite.scala:71:16, src/main/scala/common/sram.scala:194:16, :206:19
  always @(posedge clock) begin	// src/main/scala/common/sram.scala:157:7
    automatic logic _GEN_3;	// src/main/scala/common/sram.scala:212:30
    _GEN_3 = io_axi_aw_valid & io_axi_w_valid;	// src/main/scala/common/sram.scala:212:30
    if (reset) begin	// src/main/scala/common/sram.scala:157:7
      state <= 2'h0;	// src/main/scala/common/sram.scala:157:7, :169:22
      rd_req_valid <= 1'h0;	// src/main/scala/common/sram.scala:182:29
      wt_req_valid <= 1'h0;	// src/main/scala/common/sram.scala:182:29, :183:29
    end
    else begin	// src/main/scala/common/sram.scala:157:7
      if (io_rst)	// src/main/scala/common/sram.scala:158:14
        state <= 2'h0;	// src/main/scala/common/sram.scala:157:7, :169:22
      else if (_GEN) begin	// src/main/scala/common/sram.scala:206:19
        if (_GEN_3)	// src/main/scala/common/sram.scala:212:30
          state <= 2'h1;	// src/main/scala/common/sram.scala:157:7, :169:22
        else if (io_axi_ar_valid)	// src/main/scala/common/sram.scala:158:14
          state <= 2'h2;	// src/main/scala/common/sram.scala:157:7, :169:22
      end
      else if (_GEN_0
                 ? _sram_wt_res_valid & io_axi_b_ready
                 : _GEN_1 & _sram_rd_res_valid & io_axi_r_ready)	// src/main/scala/common/sram.scala:169:22, :177:20, :206:19, :231:33, :235:32, :236:19, :244:33, :249:32, :250:19
        state <= 2'h0;	// src/main/scala/common/sram.scala:157:7, :169:22
      rd_req_valid <=
        ~io_rst
        & (_GEN
             ? ~_GEN_3 & io_axi_ar_valid | rd_req_valid
             : (_GEN_0 | ~_GEN_1) & rd_req_valid);	// src/main/scala/common/sram.scala:182:29, :194:16, :196:21, :203:18, :206:19, :212:{30,49}, :219:37, :242:22
      wt_req_valid <= ~io_rst & (_GEN ? _GEN_3 | wt_req_valid : ~_GEN_0 & wt_req_valid);	// src/main/scala/common/sram.scala:183:29, :194:16, :196:21, :204:18, :206:19, :212:{30,49}, :218:24, :230:22
    end
    if (io_rst | ~_GEN) begin	// src/main/scala/common/sram.scala:172:22, :194:16, :206:19
    end
    else if (_GEN_3)	// src/main/scala/common/sram.scala:212:30
      addr_reg <= io_axi_aw_addr;	// src/main/scala/common/sram.scala:172:22
    else if (io_axi_ar_valid)	// src/main/scala/common/sram.scala:158:14
      addr_reg <= io_axi_ar_addr;	// src/main/scala/common/sram.scala:172:22
    if (io_rst | ~(_GEN & _GEN_3)) begin	// src/main/scala/common/sram.scala:173:22, :174:22, :194:16, :206:19, :212:{30,49}, :215:21
    end
    else begin	// src/main/scala/common/sram.scala:174:22, :194:16, :206:19
      wdata_reg <= io_axi_w_data;	// src/main/scala/common/sram.scala:173:22
      wstrb_reg <= {4'h0, io_axi_w_strb};	// src/main/scala/common/sram.scala:174:22, :216:21
    end
  end // always @(posedge)
  `ifdef ENABLE_INITIAL_REG_	// src/main/scala/common/sram.scala:157:7
    `ifdef FIRRTL_BEFORE_INITIAL	// src/main/scala/common/sram.scala:157:7
      `FIRRTL_BEFORE_INITIAL	// src/main/scala/common/sram.scala:157:7
    `endif // FIRRTL_BEFORE_INITIAL
    initial begin	// src/main/scala/common/sram.scala:157:7
      automatic logic [31:0] _RANDOM[0:2];	// src/main/scala/common/sram.scala:157:7
      `ifdef INIT_RANDOM_PROLOG_	// src/main/scala/common/sram.scala:157:7
        `INIT_RANDOM_PROLOG_	// src/main/scala/common/sram.scala:157:7
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT	// src/main/scala/common/sram.scala:157:7
        for (logic [1:0] i = 2'h0; i < 2'h3; i += 2'h1) begin
          _RANDOM[i] = `RANDOM;	// src/main/scala/common/sram.scala:157:7
        end	// src/main/scala/common/sram.scala:157:7
        state = _RANDOM[2'h0][1:0];	// src/main/scala/common/sram.scala:157:7, :169:22
        addr_reg = {_RANDOM[2'h0][31:2], _RANDOM[2'h1][1:0]};	// src/main/scala/common/sram.scala:157:7, :169:22, :172:22
        wdata_reg = {_RANDOM[2'h1][31:2], _RANDOM[2'h2][1:0]};	// src/main/scala/common/sram.scala:157:7, :172:22, :173:22
        wstrb_reg = _RANDOM[2'h2][9:2];	// src/main/scala/common/sram.scala:157:7, :173:22, :174:22
        rd_req_valid = _RANDOM[2'h2][10];	// src/main/scala/common/sram.scala:157:7, :173:22, :182:29
        wt_req_valid = _RANDOM[2'h2][11];	// src/main/scala/common/sram.scala:157:7, :173:22, :183:29
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL	// src/main/scala/common/sram.scala:157:7
      `FIRRTL_AFTER_INITIAL	// src/main/scala/common/sram.scala:157:7
    `endif // FIRRTL_AFTER_INITIAL
  `endif // ENABLE_INITIAL_REG_
  SRAM #(
    .DATA_WIDTH(32),
    .DELAY_CYCLES(1)
  ) sram (	// src/main/scala/common/sram.scala:177:20
    .clk          (io_clk),
    .rst          (io_rst),
    .rd_req_valid (rd_req_valid),	// src/main/scala/common/sram.scala:182:29
    .addr         (addr_reg),	// src/main/scala/common/sram.scala:172:22
    .data_out     (_sram_data_out),
    .rd_res_valid (_sram_rd_res_valid),
    .wt_req_valid (wt_req_valid),	// src/main/scala/common/sram.scala:183:29
    .waddr        (addr_reg),	// src/main/scala/common/sram.scala:172:22
    .wdata        (wdata_reg),	// src/main/scala/common/sram.scala:173:22
    .wmask        (wstrb_reg),	// src/main/scala/common/sram.scala:174:22
    .wt_res_valid (_sram_wt_res_valid)
  );
  assign io_axi_aw_ready = io_axi_w_ready_0;	// src/main/scala/common/sram.scala:157:7, :194:16, :196:21, :206:19
  assign io_axi_w_ready = io_axi_w_ready_0;	// src/main/scala/common/sram.scala:157:7, :194:16, :196:21, :206:19
  assign io_axi_b_valid = ~(io_rst | _GEN) & _GEN_0 & _sram_wt_res_valid;	// src/main/scala/common/axi4_lite.scala:67:17, src/main/scala/common/sram.scala:157:7, :177:20, :194:16, :198:21, :206:19
  assign io_axi_ar_ready = io_axi_w_ready_0;	// src/main/scala/common/sram.scala:157:7, :194:16, :196:21, :206:19
  assign io_axi_r_valid = ~_GEN_2 & _GEN_1 & _sram_rd_res_valid;	// src/main/scala/common/axi4_lite.scala:70:17, :71:16, src/main/scala/common/sram.scala:157:7, :177:20, :194:16, :201:21, :206:19
  assign io_axi_r_data = _GEN_2 | ~(_GEN_1 & _sram_rd_res_valid) ? 32'h0 : _sram_data_out;	// src/main/scala/common/axi4_lite.scala:71:16, src/main/scala/common/sram.scala:157:7, :177:20, :194:16, :206:19, :244:33, :246:26
endmodule

module ysyx_24120009_core (	// src/main/scala/npc/core.scala:8:7
  input         clock,	// src/main/scala/npc/core.scala:8:7
                reset,	// src/main/scala/npc/core.scala:8:7
  output [31:0] io_pc_debug,	// src/main/scala/npc/core.scala:9:16
                io_inst_debug,	// src/main/scala/npc/core.scala:9:16
  output [1:0]  io_ifu_state_debug,	// src/main/scala/npc/core.scala:9:16
                io_lsu_state_debug,	// src/main/scala/npc/core.scala:9:16
  output        io_lsu_is_ld_or_st_debug,	// src/main/scala/npc/core.scala:9:16
  output [31:0] io_lsu_reg_inst_debug,	// src/main/scala/npc/core.scala:9:16
  output [1:0]  io_wbu_state_debug,	// src/main/scala/npc/core.scala:9:16
  output [31:0] io_wb_data_debug,	// src/main/scala/npc/core.scala:9:16
  output        io_wb_wen_debug,	// src/main/scala/npc/core.scala:9:16
  output [1:0]  io_wb_sel_debug,	// src/main/scala/npc/core.scala:9:16
                io_Arbiter_state_debug	// src/main/scala/npc/core.scala:9:16
);

  wire        _sram_io_axi_aw_ready;	// src/main/scala/npc/core.scala:64:22
  wire        _sram_io_axi_w_ready;	// src/main/scala/npc/core.scala:64:22
  wire        _sram_io_axi_b_valid;	// src/main/scala/npc/core.scala:64:22
  wire        _sram_io_axi_ar_ready;	// src/main/scala/npc/core.scala:64:22
  wire        _sram_io_axi_r_valid;	// src/main/scala/npc/core.scala:64:22
  wire [31:0] _sram_io_axi_r_data;	// src/main/scala/npc/core.scala:64:22
  wire        _arbiter_io_ifu_ar_ready;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_ifu_r_valid;	// src/main/scala/npc/core.scala:63:25
  wire [31:0] _arbiter_io_ifu_r_data;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_lsu_aw_ready;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_lsu_w_ready;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_lsu_b_valid;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_lsu_ar_ready;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_lsu_r_valid;	// src/main/scala/npc/core.scala:63:25
  wire [31:0] _arbiter_io_lsu_r_data;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_axi_aw_valid;	// src/main/scala/npc/core.scala:63:25
  wire [31:0] _arbiter_io_axi_aw_addr;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_axi_w_valid;	// src/main/scala/npc/core.scala:63:25
  wire [31:0] _arbiter_io_axi_w_data;	// src/main/scala/npc/core.scala:63:25
  wire [3:0]  _arbiter_io_axi_w_strb;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_axi_b_ready;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_axi_ar_valid;	// src/main/scala/npc/core.scala:63:25
  wire [31:0] _arbiter_io_axi_ar_addr;	// src/main/scala/npc/core.scala:63:25
  wire        _arbiter_io_axi_r_ready;	// src/main/scala/npc/core.scala:63:25
  wire [31:0] _regfile_rs1_data;	// src/main/scala/npc/core.scala:34:25
  wire [31:0] _regfile_rs2_data;	// src/main/scala/npc/core.scala:34:25
  wire        _wbu_io_in_ready;	// src/main/scala/npc/core.scala:33:21
  wire [31:0] _wbu_io_wb_data;	// src/main/scala/npc/core.scala:33:21
  wire [4:0]  _wbu_io_wb_addr;	// src/main/scala/npc/core.scala:33:21
  wire        _wbu_io_wb_wen;	// src/main/scala/npc/core.scala:33:21
  wire        _wbu_io_pc_wen;	// src/main/scala/npc/core.scala:33:21
  wire        _lsu_io_in_ready;	// src/main/scala/npc/core.scala:32:21
  wire        _lsu_io_out_valid;	// src/main/scala/npc/core.scala:32:21
  wire [31:0] _lsu_io_out_bits_inst;	// src/main/scala/npc/core.scala:32:21
  wire [31:0] _lsu_io_out_bits_pc;	// src/main/scala/npc/core.scala:32:21
  wire [31:0] _lsu_io_out_bits_dmem_rdata;	// src/main/scala/npc/core.scala:32:21
  wire [31:0] _lsu_io_out_bits_result;	// src/main/scala/npc/core.scala:32:21
  wire [4:0]  _lsu_io_out_bits_wb_addr;	// src/main/scala/npc/core.scala:32:21
  wire        _lsu_io_memory_aw_valid;	// src/main/scala/npc/core.scala:32:21
  wire [31:0] _lsu_io_memory_aw_addr;	// src/main/scala/npc/core.scala:32:21
  wire        _lsu_io_memory_w_valid;	// src/main/scala/npc/core.scala:32:21
  wire [31:0] _lsu_io_memory_w_data;	// src/main/scala/npc/core.scala:32:21
  wire [3:0]  _lsu_io_memory_w_strb;	// src/main/scala/npc/core.scala:32:21
  wire        _lsu_io_memory_b_ready;	// src/main/scala/npc/core.scala:32:21
  wire        _lsu_io_memory_ar_valid;	// src/main/scala/npc/core.scala:32:21
  wire [31:0] _lsu_io_memory_ar_addr;	// src/main/scala/npc/core.scala:32:21
  wire        _lsu_io_memory_r_ready;	// src/main/scala/npc/core.scala:32:21
  wire        _exu_io_in_ready;	// src/main/scala/npc/core.scala:31:21
  wire        _exu_io_out_valid;	// src/main/scala/npc/core.scala:31:21
  wire [31:0] _exu_io_out_bits_inst;	// src/main/scala/npc/core.scala:31:21
  wire [31:0] _exu_io_out_bits_pc;	// src/main/scala/npc/core.scala:31:21
  wire [31:0] _exu_io_out_bits_dmem_addr;	// src/main/scala/npc/core.scala:31:21
  wire [31:0] _exu_io_out_bits_result;	// src/main/scala/npc/core.scala:31:21
  wire [31:0] _exu_io_out_bits_rs2_data;	// src/main/scala/npc/core.scala:31:21
  wire [4:0]  _exu_io_out_bits_wb_addr;	// src/main/scala/npc/core.scala:31:21
  wire        _idu_io_in_ready;	// src/main/scala/npc/core.scala:30:21
  wire        _idu_io_out_valid;	// src/main/scala/npc/core.scala:30:21
  wire [31:0] _idu_io_out_bits_inst;	// src/main/scala/npc/core.scala:30:21
  wire [31:0] _idu_io_out_bits_pc;	// src/main/scala/npc/core.scala:30:21
  wire [4:0]  _idu_io_out_bits_wb_addr;	// src/main/scala/npc/core.scala:30:21
  wire [31:0] _idu_io_out_bits_alu_op1;	// src/main/scala/npc/core.scala:30:21
  wire [31:0] _idu_io_out_bits_alu_op2;	// src/main/scala/npc/core.scala:30:21
  wire [31:0] _idu_io_out_bits_rs2_data;	// src/main/scala/npc/core.scala:30:21
  wire [31:0] _idu_io_jump_reg_target;	// src/main/scala/npc/core.scala:30:21
  wire [31:0] _idu_io_br_target;	// src/main/scala/npc/core.scala:30:21
  wire [31:0] _idu_io_jmp_target;	// src/main/scala/npc/core.scala:30:21
  wire [2:0]  _idu_io_pc_sel;	// src/main/scala/npc/core.scala:30:21
  wire [4:0]  _idu_io_rs1_addr;	// src/main/scala/npc/core.scala:30:21
  wire [4:0]  _idu_io_rs2_addr;	// src/main/scala/npc/core.scala:30:21
  wire        _ifu_io_out_valid;	// src/main/scala/npc/core.scala:29:21
  wire [31:0] _ifu_io_out_bits_inst;	// src/main/scala/npc/core.scala:29:21
  wire [31:0] _ifu_io_out_bits_pc;	// src/main/scala/npc/core.scala:29:21
  wire        _ifu_io_memory_ar_valid;	// src/main/scala/npc/core.scala:29:21
  wire [31:0] _ifu_io_memory_ar_addr;	// src/main/scala/npc/core.scala:29:21
  wire        _ifu_io_memory_r_ready;	// src/main/scala/npc/core.scala:29:21
  IFU ifu (	// src/main/scala/npc/core.scala:29:21
    .clock              (clock),
    .reset              (reset),
    .io_out_ready       (_idu_io_in_ready),	// src/main/scala/npc/core.scala:30:21
    .io_out_valid       (_ifu_io_out_valid),
    .io_out_bits_inst   (_ifu_io_out_bits_inst),
    .io_out_bits_pc     (_ifu_io_out_bits_pc),
    .io_pc_sel          (_idu_io_pc_sel),	// src/main/scala/npc/core.scala:30:21
    .io_jump_reg_target (_idu_io_jump_reg_target),	// src/main/scala/npc/core.scala:30:21
    .io_br_target       (_idu_io_br_target),	// src/main/scala/npc/core.scala:30:21
    .io_jmp_target      (_idu_io_jmp_target),	// src/main/scala/npc/core.scala:30:21
    .io_pc_wen          (_wbu_io_pc_wen),	// src/main/scala/npc/core.scala:33:21
    .io_memory_ar_valid (_ifu_io_memory_ar_valid),
    .io_memory_ar_ready (_arbiter_io_ifu_ar_ready),	// src/main/scala/npc/core.scala:63:25
    .io_memory_ar_addr  (_ifu_io_memory_ar_addr),
    .io_memory_r_valid  (_arbiter_io_ifu_r_valid),	// src/main/scala/npc/core.scala:63:25
    .io_memory_r_ready  (_ifu_io_memory_r_ready),
    .io_memory_r_data   (_arbiter_io_ifu_r_data),	// src/main/scala/npc/core.scala:63:25
    .io_pc_debug        (io_pc_debug),
    .io_inst_debug      (io_inst_debug),
    .io_ifu_state_debug (io_ifu_state_debug)
  );
  IDU idu (	// src/main/scala/npc/core.scala:30:21
    .clock                (clock),
    .reset                (reset),
    .io_in_ready          (_idu_io_in_ready),
    .io_in_valid          (_ifu_io_out_valid),	// src/main/scala/npc/core.scala:29:21
    .io_in_bits_inst      (_ifu_io_out_bits_inst),	// src/main/scala/npc/core.scala:29:21
    .io_in_bits_pc        (_ifu_io_out_bits_pc),	// src/main/scala/npc/core.scala:29:21
    .io_out_ready         (_exu_io_in_ready),	// src/main/scala/npc/core.scala:31:21
    .io_out_valid         (_idu_io_out_valid),
    .io_out_bits_inst     (_idu_io_out_bits_inst),
    .io_out_bits_pc       (_idu_io_out_bits_pc),
    .io_out_bits_wb_addr  (_idu_io_out_bits_wb_addr),
    .io_out_bits_alu_op1  (_idu_io_out_bits_alu_op1),
    .io_out_bits_alu_op2  (_idu_io_out_bits_alu_op2),
    .io_out_bits_rs2_data (_idu_io_out_bits_rs2_data),
    .io_jump_reg_target   (_idu_io_jump_reg_target),
    .io_br_target         (_idu_io_br_target),
    .io_jmp_target        (_idu_io_jmp_target),
    .io_pc_sel            (_idu_io_pc_sel),
    .io_rs1_data          (_regfile_rs1_data),	// src/main/scala/npc/core.scala:34:25
    .io_rs2_data          (_regfile_rs2_data),	// src/main/scala/npc/core.scala:34:25
    .io_rs1_addr          (_idu_io_rs1_addr),
    .io_rs2_addr          (_idu_io_rs2_addr)
  );
  EXU exu (	// src/main/scala/npc/core.scala:31:21
    .clock                 (clock),
    .reset                 (reset),
    .io_in_ready           (_exu_io_in_ready),
    .io_in_valid           (_idu_io_out_valid),	// src/main/scala/npc/core.scala:30:21
    .io_in_bits_inst       (_idu_io_out_bits_inst),	// src/main/scala/npc/core.scala:30:21
    .io_in_bits_pc         (_idu_io_out_bits_pc),	// src/main/scala/npc/core.scala:30:21
    .io_in_bits_wb_addr    (_idu_io_out_bits_wb_addr),	// src/main/scala/npc/core.scala:30:21
    .io_in_bits_alu_op1    (_idu_io_out_bits_alu_op1),	// src/main/scala/npc/core.scala:30:21
    .io_in_bits_alu_op2    (_idu_io_out_bits_alu_op2),	// src/main/scala/npc/core.scala:30:21
    .io_in_bits_rs2_data   (_idu_io_out_bits_rs2_data),	// src/main/scala/npc/core.scala:30:21
    .io_out_ready          (_lsu_io_in_ready),	// src/main/scala/npc/core.scala:32:21
    .io_out_valid          (_exu_io_out_valid),
    .io_out_bits_inst      (_exu_io_out_bits_inst),
    .io_out_bits_pc        (_exu_io_out_bits_pc),
    .io_out_bits_dmem_addr (_exu_io_out_bits_dmem_addr),
    .io_out_bits_result    (_exu_io_out_bits_result),
    .io_out_bits_rs2_data  (_exu_io_out_bits_rs2_data),
    .io_out_bits_wb_addr   (_exu_io_out_bits_wb_addr)
  );
  LSU lsu (	// src/main/scala/npc/core.scala:32:21
    .clock                    (clock),
    .reset                    (reset),
    .io_in_ready              (_lsu_io_in_ready),
    .io_in_valid              (_exu_io_out_valid),	// src/main/scala/npc/core.scala:31:21
    .io_in_bits_inst          (_exu_io_out_bits_inst),	// src/main/scala/npc/core.scala:31:21
    .io_in_bits_pc            (_exu_io_out_bits_pc),	// src/main/scala/npc/core.scala:31:21
    .io_in_bits_dmem_addr     (_exu_io_out_bits_dmem_addr),	// src/main/scala/npc/core.scala:31:21
    .io_in_bits_result        (_exu_io_out_bits_result),	// src/main/scala/npc/core.scala:31:21
    .io_in_bits_rs2_data      (_exu_io_out_bits_rs2_data),	// src/main/scala/npc/core.scala:31:21
    .io_in_bits_wb_addr       (_exu_io_out_bits_wb_addr),	// src/main/scala/npc/core.scala:31:21
    .io_out_ready             (_wbu_io_in_ready),	// src/main/scala/npc/core.scala:33:21
    .io_out_valid             (_lsu_io_out_valid),
    .io_out_bits_inst         (_lsu_io_out_bits_inst),
    .io_out_bits_pc           (_lsu_io_out_bits_pc),
    .io_out_bits_dmem_rdata   (_lsu_io_out_bits_dmem_rdata),
    .io_out_bits_result       (_lsu_io_out_bits_result),
    .io_out_bits_wb_addr      (_lsu_io_out_bits_wb_addr),
    .io_memory_aw_valid       (_lsu_io_memory_aw_valid),
    .io_memory_aw_ready       (_arbiter_io_lsu_aw_ready),	// src/main/scala/npc/core.scala:63:25
    .io_memory_aw_addr        (_lsu_io_memory_aw_addr),
    .io_memory_w_valid        (_lsu_io_memory_w_valid),
    .io_memory_w_ready        (_arbiter_io_lsu_w_ready),	// src/main/scala/npc/core.scala:63:25
    .io_memory_w_data         (_lsu_io_memory_w_data),
    .io_memory_w_strb         (_lsu_io_memory_w_strb),
    .io_memory_b_valid        (_arbiter_io_lsu_b_valid),	// src/main/scala/npc/core.scala:63:25
    .io_memory_b_ready        (_lsu_io_memory_b_ready),
    .io_memory_ar_valid       (_lsu_io_memory_ar_valid),
    .io_memory_ar_ready       (_arbiter_io_lsu_ar_ready),	// src/main/scala/npc/core.scala:63:25
    .io_memory_ar_addr        (_lsu_io_memory_ar_addr),
    .io_memory_r_valid        (_arbiter_io_lsu_r_valid),	// src/main/scala/npc/core.scala:63:25
    .io_memory_r_ready        (_lsu_io_memory_r_ready),
    .io_memory_r_data         (_arbiter_io_lsu_r_data),	// src/main/scala/npc/core.scala:63:25
    .io_lsu_state_debug       (io_lsu_state_debug),
    .io_lsu_is_ld_or_st_debug (io_lsu_is_ld_or_st_debug),
    .io_lsu_reg_inst_debug    (io_lsu_reg_inst_debug)
  );
  WBU wbu (	// src/main/scala/npc/core.scala:33:21
    .clock                 (clock),
    .reset                 (reset),
    .io_in_ready           (_wbu_io_in_ready),
    .io_in_valid           (_lsu_io_out_valid),	// src/main/scala/npc/core.scala:32:21
    .io_in_bits_inst       (_lsu_io_out_bits_inst),	// src/main/scala/npc/core.scala:32:21
    .io_in_bits_pc         (_lsu_io_out_bits_pc),	// src/main/scala/npc/core.scala:32:21
    .io_in_bits_dmem_rdata (_lsu_io_out_bits_dmem_rdata),	// src/main/scala/npc/core.scala:32:21
    .io_in_bits_result     (_lsu_io_out_bits_result),	// src/main/scala/npc/core.scala:32:21
    .io_in_bits_wb_addr    (_lsu_io_out_bits_wb_addr),	// src/main/scala/npc/core.scala:32:21
    .io_wb_data            (_wbu_io_wb_data),
    .io_wb_addr            (_wbu_io_wb_addr),
    .io_wb_wen             (_wbu_io_wb_wen),
    .io_pc_wen             (_wbu_io_pc_wen),
    .io_wbu_state_debug    (io_wbu_state_debug),
    .io_wb_data_debug      (io_wb_data_debug),
    .io_wb_wen_debug       (io_wb_wen_debug),
    .io_wb_sel_debug       (io_wb_sel_debug)
  );
  RegisterFile regfile (	// src/main/scala/npc/core.scala:34:25
    .clk      (clock),
    .rs1_addr (_idu_io_rs1_addr),	// src/main/scala/npc/core.scala:30:21
    .rs2_addr (_idu_io_rs2_addr),	// src/main/scala/npc/core.scala:30:21
    .rd_addr  (_wbu_io_wb_addr),	// src/main/scala/npc/core.scala:33:21
    .rd_data  (_wbu_io_wb_data),	// src/main/scala/npc/core.scala:33:21
    .wen      (_wbu_io_wb_wen),	// src/main/scala/npc/core.scala:33:21
    .rs1_data (_regfile_rs1_data),
    .rs2_data (_regfile_rs2_data)
  );
  MemoryArbiter arbiter (	// src/main/scala/npc/core.scala:63:25
    .clock                  (clock),
    .reset                  (reset),
    .io_ifu_ar_valid        (_ifu_io_memory_ar_valid),	// src/main/scala/npc/core.scala:29:21
    .io_ifu_ar_ready        (_arbiter_io_ifu_ar_ready),
    .io_ifu_ar_addr         (_ifu_io_memory_ar_addr),	// src/main/scala/npc/core.scala:29:21
    .io_ifu_r_valid         (_arbiter_io_ifu_r_valid),
    .io_ifu_r_ready         (_ifu_io_memory_r_ready),	// src/main/scala/npc/core.scala:29:21
    .io_ifu_r_data          (_arbiter_io_ifu_r_data),
    .io_lsu_aw_valid        (_lsu_io_memory_aw_valid),	// src/main/scala/npc/core.scala:32:21
    .io_lsu_aw_ready        (_arbiter_io_lsu_aw_ready),
    .io_lsu_aw_addr         (_lsu_io_memory_aw_addr),	// src/main/scala/npc/core.scala:32:21
    .io_lsu_w_valid         (_lsu_io_memory_w_valid),	// src/main/scala/npc/core.scala:32:21
    .io_lsu_w_ready         (_arbiter_io_lsu_w_ready),
    .io_lsu_w_data          (_lsu_io_memory_w_data),	// src/main/scala/npc/core.scala:32:21
    .io_lsu_w_strb          (_lsu_io_memory_w_strb),	// src/main/scala/npc/core.scala:32:21
    .io_lsu_b_valid         (_arbiter_io_lsu_b_valid),
    .io_lsu_b_ready         (_lsu_io_memory_b_ready),	// src/main/scala/npc/core.scala:32:21
    .io_lsu_ar_valid        (_lsu_io_memory_ar_valid),	// src/main/scala/npc/core.scala:32:21
    .io_lsu_ar_ready        (_arbiter_io_lsu_ar_ready),
    .io_lsu_ar_addr         (_lsu_io_memory_ar_addr),	// src/main/scala/npc/core.scala:32:21
    .io_lsu_r_valid         (_arbiter_io_lsu_r_valid),
    .io_lsu_r_ready         (_lsu_io_memory_r_ready),	// src/main/scala/npc/core.scala:32:21
    .io_lsu_r_data          (_arbiter_io_lsu_r_data),
    .io_axi_aw_valid        (_arbiter_io_axi_aw_valid),
    .io_axi_aw_ready        (_sram_io_axi_aw_ready),	// src/main/scala/npc/core.scala:64:22
    .io_axi_aw_addr         (_arbiter_io_axi_aw_addr),
    .io_axi_w_valid         (_arbiter_io_axi_w_valid),
    .io_axi_w_ready         (_sram_io_axi_w_ready),	// src/main/scala/npc/core.scala:64:22
    .io_axi_w_data          (_arbiter_io_axi_w_data),
    .io_axi_w_strb          (_arbiter_io_axi_w_strb),
    .io_axi_b_valid         (_sram_io_axi_b_valid),	// src/main/scala/npc/core.scala:64:22
    .io_axi_b_ready         (_arbiter_io_axi_b_ready),
    .io_axi_ar_valid        (_arbiter_io_axi_ar_valid),
    .io_axi_ar_ready        (_sram_io_axi_ar_ready),	// src/main/scala/npc/core.scala:64:22
    .io_axi_ar_addr         (_arbiter_io_axi_ar_addr),
    .io_axi_r_valid         (_sram_io_axi_r_valid),	// src/main/scala/npc/core.scala:64:22
    .io_axi_r_ready         (_arbiter_io_axi_r_ready),
    .io_axi_r_data          (_sram_io_axi_r_data),	// src/main/scala/npc/core.scala:64:22
    .io_Arbiter_state_debug (io_Arbiter_state_debug)
  );
  SramAxi4LiteWrapper sram (	// src/main/scala/npc/core.scala:64:22
    .clock           (clock),
    .reset           (reset),
    .io_clk          (clock),
    .io_rst          (reset),
    .io_axi_aw_valid (_arbiter_io_axi_aw_valid),	// src/main/scala/npc/core.scala:63:25
    .io_axi_aw_ready (_sram_io_axi_aw_ready),
    .io_axi_aw_addr  (_arbiter_io_axi_aw_addr),	// src/main/scala/npc/core.scala:63:25
    .io_axi_w_valid  (_arbiter_io_axi_w_valid),	// src/main/scala/npc/core.scala:63:25
    .io_axi_w_ready  (_sram_io_axi_w_ready),
    .io_axi_w_data   (_arbiter_io_axi_w_data),	// src/main/scala/npc/core.scala:63:25
    .io_axi_w_strb   (_arbiter_io_axi_w_strb),	// src/main/scala/npc/core.scala:63:25
    .io_axi_b_valid  (_sram_io_axi_b_valid),
    .io_axi_b_ready  (_arbiter_io_axi_b_ready),	// src/main/scala/npc/core.scala:63:25
    .io_axi_ar_valid (_arbiter_io_axi_ar_valid),	// src/main/scala/npc/core.scala:63:25
    .io_axi_ar_ready (_sram_io_axi_ar_ready),
    .io_axi_ar_addr  (_arbiter_io_axi_ar_addr),	// src/main/scala/npc/core.scala:63:25
    .io_axi_r_valid  (_sram_io_axi_r_valid),
    .io_axi_r_ready  (_arbiter_io_axi_r_ready),	// src/main/scala/npc/core.scala:63:25
    .io_axi_r_data   (_sram_io_axi_r_data)
  );
endmodule


// ----- 8< ----- FILE "./EBreakHandler.v" ----- 8< -----



module EBreakHandler(
    input wire [31:0] inst
);

import "DPI-C" function void simulation_exit();

    always @(*) begin
        if (inst == 32'h00100073) begin
            $display("EBREAK: Simulation exiting...");
            simulation_exit(); // 通知仿真环境结束
        end
    end

endmodule
    

// ----- 8< ----- FILE "./RegisterFile.v" ----- 8< -----


module RegisterFile #(
    parameter ADDR_WIDTH = 5,
    parameter DATA_WIDTH = 32
)(
    input clk,
    input [DATA_WIDTH-1:0] rd_data,
    input [ADDR_WIDTH-1:0] rd_addr,
    input wen,
    input [ADDR_WIDTH-1:0] rs1_addr,
    input [ADDR_WIDTH-1:0] rs2_addr,
    output [DATA_WIDTH-1:0] rs1_data,
    output [DATA_WIDTH-1:0] rs2_data
);

    // DPI-C function to get the register values
    import "DPI-C" function void get_register_values(input logic [31:0] rf[31:0]);

    // initialize the register file 
    initial begin
        integer i;
        for (i = 0; i < 2**ADDR_WIDTH; i = i + 1) begin
            rf[i] = {DATA_WIDTH{1'b0}};
        end
    end

    // signal declaration
    reg [DATA_WIDTH-1:0] rf [2**ADDR_WIDTH-1:0];

    // procedural block
    always @(posedge clk) begin
        if (wen && rd_addr != 0) begin
            rf[rd_addr] <= rd_data;
        end
    end

    always @(*) begin
        get_register_values(rf);
    end

    // signal assignments
    assign rs1_data = rf[rs1_addr];
    assign rs2_data = rf[rs2_addr];

endmodule
    

// ----- 8< ----- FILE "./SRAM.v" ----- 8< -----


module SRAM #(
  parameter DELAY_CYCLES = 1,  
  parameter DATA_WIDTH   = 32     
)(
  // Clock and reset signals
  input                                                       clk,       
  input                                                       rst,     

  // sRead memory signals
  input                                                       rd_req_valid,      // Indicates a valid sRead request
  input        [DATA_WIDTH-1:0]                               addr,              // Address for the sRead operation (32-bit)
  output reg   [DATA_WIDTH-1:0]                               data_out,          // Data output from memory (32-bit)
  output wire                                                 rd_res_valid,      // Indicates a valid sRead response

  // sWrite memory signals
  input                                                       wt_req_valid,      // Indicates a valid sWrite request
  input        [DATA_WIDTH-1:0]                               waddr,             // Address for the sWrite operation (32-bit)
  input        [DATA_WIDTH-1:0]                               wdata,             // Data to be written to memory (32-bit)
  input wire   [7:0]                                          wmask,             // sWrite mask to specify which bytes to update
  output wire                                                 wt_res_valid       // Indicates a valid sWrite response
);

  // Import DPI-C function for memory sRead/sWrite
  import "DPI-C" function int pmem_read (input int raddr);
  import "DPI-C" function void pmem_write (input int waddr, input int wdata, input byte wmask);

  // Internal signals for pipeline delay
  reg  [DATA_WIDTH-1:0] addr_delayed;  
  reg                  rd_req_valid_delayed;  
  reg  [DATA_WIDTH-1:0] waddr_delayed; 
  reg  [DATA_WIDTH-1:0] wdata_delayed; 
  reg  [7:0]            wmask_delayed; 
  reg                  wt_req_valid_delayed;

  // Pipeline stage to simulate N-cycle latency
  generate
    if (DELAY_CYCLES == 1) begin
      // Single cycle delay
      always @(posedge clk or posedge rst) begin
        if (rst) begin
          addr_delayed <= {DATA_WIDTH{1'b0}};
          rd_req_valid_delayed <= 1'b0;
          waddr_delayed <= {DATA_WIDTH{1'b0}};
          wdata_delayed <= {DATA_WIDTH{1'b0}};
          wmask_delayed <= 8'b0;
          wt_req_valid_delayed <= 1'b0;
        end else begin
          addr_delayed <= addr;
          rd_req_valid_delayed <= rd_req_valid;
          waddr_delayed <= waddr;
          wdata_delayed <= wdata;
          wmask_delayed <= wmask;
          wt_req_valid_delayed <= wt_req_valid;
        end
      end
    end else begin
      // Multi-cycle delay using a register chain
      reg  [DATA_WIDTH-1:0] addr_pipeline [0:DELAY_CYCLES-1];  
      reg                  rd_req_valid_pipeline [0:DELAY_CYCLES-1];  
      reg  [DATA_WIDTH-1:0] waddr_pipeline [0:DELAY_CYCLES-1]; 
      reg  [DATA_WIDTH-1:0] wdata_pipeline [0:DELAY_CYCLES-1]; 
      reg  [7:0]            wmask_pipeline [0:DELAY_CYCLES-1]; 
      reg                  wt_req_valid_pipeline [0:DELAY_CYCLES-1];

      always @(posedge clk or posedge rst) begin
        if (rst) begin
          for (integer i = 0; i < DELAY_CYCLES; i = i + 1) begin
            addr_pipeline[i] <= {DATA_WIDTH{1'b0}};
            rd_req_valid_pipeline[i] <= 1'b0;
            waddr_pipeline[i] <= {DATA_WIDTH{1'b0}};
            wdata_pipeline[i] <= {DATA_WIDTH{1'b0}};
            wmask_pipeline[i] <= 8'b0;
            wt_req_valid_pipeline[i] <= 1'b0;
          end
        end else begin
          // Shift the pipeline
          addr_pipeline[0] <= addr;
          rd_req_valid_pipeline[0] <= rd_req_valid;
          waddr_pipeline[0] <= waddr;
          wdata_pipeline[0] <= wdata;
          wmask_pipeline[0] <= wmask;
          wt_req_valid_pipeline[0] <= wt_req_valid;

          for (integer i = 1; i < DELAY_CYCLES; i = i + 1) begin
            addr_pipeline[i] <= addr_pipeline[i-1];
            rd_req_valid_pipeline[i] <= rd_req_valid_pipeline[i-1];
            waddr_pipeline[i] <= waddr_pipeline[i-1];
            wdata_pipeline[i] <= wdata_pipeline[i-1];
            wmask_pipeline[i] <= wmask_pipeline[i-1];
            wt_req_valid_pipeline[i] <= wt_req_valid_pipeline[i-1];
          end
        end
      end

      // Assign the delayed signals
      assign addr_delayed = addr_pipeline[DELAY_CYCLES-1];
      assign rd_req_valid_delayed = rd_req_valid_pipeline[DELAY_CYCLES-1];
      assign waddr_delayed = waddr_pipeline[DELAY_CYCLES-1];
      assign wdata_delayed = wdata_pipeline[DELAY_CYCLES-1];
      assign wmask_delayed = wmask_pipeline[DELAY_CYCLES-1];
      assign wt_req_valid_delayed = wt_req_valid_pipeline[DELAY_CYCLES-1];
    end
  endgenerate

  // Memory sRead & sWrite logic
  always @(*) begin
    if (rd_req_valid_delayed) begin
      data_out = pmem_read (addr_delayed);  
      rd_res_valid = 1'b1;
      wt_res_valid = 1'b0;
    end else if (wt_req_valid_delayed) begin
      pmem_write (waddr_delayed, wdata_delayed, wmask_delayed);
      data_out = wdata_delayed;  
      rd_res_valid = 1'b0;
      wt_res_valid = 1'b1;
    end else begin
      data_out = {DATA_WIDTH{1'b0}};  
      rd_res_valid = 1'b0;
      wt_res_valid = 1'b0;
    end
  end

endmodule
    

